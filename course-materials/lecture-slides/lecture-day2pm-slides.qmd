---
format: 
  revealjs:
    slide-number: true
    highlight-style: a11y
    chalkboard: true
    theme: 
      - ../../meds-slides-styles.scss
bibliography: references.bib
---

## {#title-slide data-menu-title="Title Slide" background="#053660"} 

[Documenting Scientific Code and Data]{.custom-title}

[*EDS 214: Analytical Workflows and Scientific Reproducibility*]{.custom-subtitle}

<hr class="hr-teal">

[Day 2 Afternoon | August 26^th^, 2025]{.custom-subtitle3}

---

## {#learning-objectives data-menu-title="Learning Objectives"} 

[This afternoon, you'll learn:]{.slide-title}

<hr>

:::{.body-text-m}

* The importance of documentation for reproducibility
* The target _audiences_ for different types of documentation
* How to use **READMEs**, **code comments**, and **code style** to document your workflow

:::

---

## {#lego-activity data-menu-title="LEGO Blueprints Activity"} 

[LEGO Blueprints Activity]{.slide-title}

<hr>

[Step 1: Build (in pairs)]{.body-text-l}

:::{.body-text-m}

* Form pairs and receive LEGOs
* Each pair builds a LEGO structure. Get weird with it!
* Take a picture of the _finished product_
* Destroy the LEGO structure

:::

---

## {#lego-copy data-menu-title="LEGO Copy"} 

[LEGO Blueprints Activity]{.slide-title}

<hr>

[Step 2: Copy (in pairs)]{.body-text-l}

:::{.body-text-m}

* Switch LEGOs and pictures with another pair
* Try to replicate the structure using only the picture
* Take notes about challenges encountered

:::

---

## {#lego-share data-menu-title="LEGO Share"} 

[LEGO Blueprints Activity]{.slide-title}

<hr>

[Step 3: Share (in quads)]{.body-text-l}

:::{.body-text-m}

* Pairs compare original and finished structures
* Take notes about what was different
* Describe 2-3 pieces of documentation that would have helped

:::

---

## {#lego-debrief data-menu-title="LEGO Debrief"} 

[LEGO Blueprints Activity]{.slide-title}

<hr>

[Step 4: Debrief (as a class)]{.body-text-l}

:::{.body-text-m}

![](images/day2/documentation-audiences.png){height="500"}

:::

---

## {#documentation-types data-menu-title="Types of Documentation"} 

[Types of Documentation]{.slide-title}

<hr>

:::{.body-text-m}

**README**

> A file that (succintly) describes the project and how it works.

**Comments**

> Annotations within the code to explain _why_.

**Code style**

> A consistent format for writing code, including naming conventions and structure.

:::

---

## {#readme-documentation data-menu-title="README Documentation"} 

[README Documentation]{.slide-title}

<hr>

[Typical README contents]{.body-text-l}

1. A short, but descriptive, title 
2. A brief explanation of the repository's purpose
3. A concise description of what's housed in the repository
4. Details regarding data access
5. A list of authors or current contributors (for collaborative work)
6. References

---

## {#code-comments data-menu-title="Code Comments"} 

[Code Comments]{.slide-title}

<hr>

[Flavors of code comments]{.body-text-l}

**Headers**

> Describe file's purpose, author, and date created/modified

**Inline**

> Explain complex logic, clarify assumptions, warn about edge cases

**Function**

> Purpose, parameters, and return values of functions

---

## {#code-style data-menu-title="Code Style"} 

[Code Style]{.slide-title}

<hr>

[Readability → Comprehension → Reproducibility]{.body-text-l}

**Consistency is key!** (Just like workflow folder organization)

**Key considerations:**

* Object naming conventions
* Spacing and layout
* Writing and calling functions
* Comments!

---

## {#documentation-scavenger-hunt data-menu-title="Documentation Scavenger Hunt"} 

[Documentation Scavenger Hunt]{.slide-title}

<hr>

[Instructions]{.body-text-l}

1. Form groups of 3

2. Pick a published repository from yesterday

-   <https://github.com/kelpecosystems/global_kelp_time_series>
-   <https://github.com/bencecc/ReefFishStability/tree/v1>
-   <https://github.com/NCEAS/ca-mpa>

3. Find examples of READMEs, comments (header, inline, and function), and coding style in each repo

**Note: not every repo will have all of these!**

4. I will call on three groups to share

---

## {#roxygen1 data-menu-title="Roxygen"} 

[Roxygen]{.slide-title}

<hr>

Roxygen is a special commenting system for R functions.

```r
#' Norm of the jerk vector
#'
#' Uses Savitzky-Golay filtering to de-noise before differentiating acceleration
#'
#' @param A Tri-axial acceleration (n x 3 matrix)
#' @param fs Sampling rate (Hz)
#' @param p Order of Savitzky-Golay filter (3 by default)
#' @param n Window size of Savitzky-Golay filter (11 by default)
#'
#' @return Norm of the jerk vector of A
#' @export
jerk <- function(A, fs, p = 3, n = 11) {
  n <- n + 1 - n %% 2
  apply(A, 2, function(axis) signal::sgolayfilt(axis, p, n, m = 1))
}
```

---

## {#roxygen2 data-menu-title="Roxygen"} 

[Roxygen]{.slide-title}

<hr>

Roxygen is a special commenting system for R functions.

![](images/day2/function-doc.png){height="500"}

---

## {#documentation-recap data-menu-title="Documentation Recap"} 

[Documentation Recap]{.slide-title}

<hr>

:::: {.columns}

::: {.column width="50%"}

**Why document?**

* Facilitates collaboration
* Supports knowledge transfer
* Prevents nasty, horrible, awful headaches

:::

::: {.column width="50%"}

**Key documentation types:**

* READMEs
* Code comments
* Consistent style

:::

::::