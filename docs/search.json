[
  {
    "objectID": "index.html#course-description",
    "href": "index.html#course-description",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "Course Description",
    "text": "Course Description\nThe generation and analysis of environmental data is often a complex, multi-step process that may involve the collaboration of many people. Increasingly, data scientists use tools that document and help to organize workflows to ensure reproducibility, shareability, and transparency of the results. This course will introduce students to the conceptual organization of workflows (including code, documents, and data) as a way to conduct reproducible analyses.\nThese concepts will be combined with the practice of various software tools and collaborative coding techniques to develop and manage multi-step analytical workflows as a team.\n\n\n\n\nConceptual model of an analytical workflow. Source: R for Data Science"
  },
  {
    "objectID": "index.html#daily-schedule",
    "href": "index.html#daily-schedule",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "Daily Schedule",
    "text": "Daily Schedule\nEach day will (approximately) follow this format.\n\n\n\n\nTime\nActivity\n\n\n\n\n10:00-10:50\nLecture 1\n\n\n10:50-11:00\nBreak\n\n\n11:00-12:00\nInteractive session 1\n\n\n12:00-1:00\nLunch\n\n\n1:00-1:50\nLecture 2\n\n\n1:50-2:00\nBreak\n\n\n2:00-3:30\nInteractive session 2\n\n\n3:30-4:00\nFlex time\n\n\n4:00-4:50\nQ&A with instructors (as needed)"
  },
  {
    "objectID": "index.html#teaching-team",
    "href": "index.html#teaching-team",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "Teaching Team",
    "text": "Teaching Team\n\n\n\n\n\n\nInstructor\n\n\n\n\n\n\n\n\n\n\n\nMax Czapanskiy\nEmail: maxczap@ucsb.edu\nLearn more: Open Ecology Lab\n\n\n\n\n\nTA\n\n\n\n\n\n\n\n\n\n\n\nAlessandra Vidal Meza\nEmail: avidalmeza@bren.ucsb.edu\nLearn more: avidalmeza.github.io"
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nEDS 214 was previously taught by Julien Brun and the current iteration draws heavily on his planning, course materials, and teaching."
  },
  {
    "objectID": "course-materials/labs/lab1.1.html",
    "href": "course-materials/labs/lab1.1.html",
    "title": "Lab 1.1 TEMPLATE",
    "section": "",
    "text": "# load packages ----"
  },
  {
    "objectID": "course-materials/labs/lab1.1.html#setup",
    "href": "course-materials/labs/lab1.1.html#setup",
    "title": "Lab 1.1 TEMPLATE",
    "section": "",
    "text": "# load packages ----"
  },
  {
    "objectID": "course-materials/labs/lab1.1.html#tidy-data-review",
    "href": "course-materials/labs/lab1.1.html#tidy-data-review",
    "title": "Lab 1.1 TEMPLATE",
    "section": "Tidy Data Review",
    "text": "Tidy Data Review\nExample untidy / wide data:\n\n# create some untidy temperature data ----\n\n# print it out ----\n\nUsing pivot_longer() to ‚Äúlengthen‚Äù / tidy our data:\n\n# convert data from wide &gt; long ----\n\n# print it out ----"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#title-slide",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#title-slide",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Reproducible Workflows\nEDS 214: Analytical Workflows and Scientific Reproducibility\n\nDay 1 Morning | August 25th, 2025"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#welcome",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#welcome",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Welcome to EDS 214!\n\nThis is a class about workflows and reproducibility\n\n\nThe workflow is the fundamental unit of data science\n\n\n\nReproducibility ensures workflows don‚Äôt become dead ends\n\n\n\nThe concepts and skills in this class will keep coming up in future classes and for the rest of your career"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#testimonial1",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#testimonial1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "‚ÄúReproducible workflows saved my life &lt;3‚Äù\n\n\n\n\nBekah Lane\nResearch Associate, Center for Coastal Studies\n\nQuestion: Where are humpbacks in SF Bay most susceptible to ship strikes?\nProblem: Manual, point-and-click solution in ArcGIS is error-prone, slow, and a nightmare to edit with collaborator feedback.\nSolution: Use automation, documentation, and modular design to create a well-organized, reproducible workflow in R"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#testimonial2",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#testimonial2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "‚ÄúReproducible workflows saved my life &lt;3‚Äù\n\n\n\n\nBekah Lane\nResearch Associate, Center for Coastal Studies\n\n‚ÄúIt takes more activation energy to ‚Äòdo it right‚Äô, but you save yourself loads of time relative to doing it by brute force.‚Äù\n‚ÄúIn my current job I‚Äôm often asked to do similar analyses for multiple projects. I can save a lot of time by recycling code between projects.‚Äù\n‚ÄúCollaboration and communication become a lot easier when you have your workflow laid out and organized instead of all jumbled in your brain.‚Äù"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#meet-max",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#meet-max",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Hi, I‚Äôm Max üëã"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#what-is-workflow1",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#what-is-workflow1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "What is a workflow?\n\nTHINK Take 1 minute to write down your own definition. Consider:\n\nWhat are the components? How do they fit together?\nWho is the audience?\nWhat would the alternative be?\n\nPAIR Turn to your neighbor and discuss your definitions\nSHARE I will randomly call on a pair to share one shared element and one differing element"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#what-is-workflow2",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#what-is-workflow2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "What is a workflow?\n\n\n\nWorkflows combine: data, code, modeling, and communication.\n\nWickham, √áetinkaya-Rundel, and Grolemund (2023)\n\nThe final workflow masks a trajectory of exploration and dead ends\n\nStoudt, V√°squez, and Martinez (2021)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#what-is-reproducibility",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#what-is-reproducibility",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "What is reproducibility?\n\n\nWe define reproducibility to mean computational reproducibility ‚Äî obtaining consistent computational results using the same input data, computational steps, methods, code, and conditions of analysis\n\nReproducibility and Replicability in Science (2019)\nDEBATE With your neighbor, discuss: does reproducibility matter if you‚Äôre not doing academic research?\n\nWhat if you work for a public utility, a non-governmental organization, or a private firm?\nArticulate one argument for and against the importance of reproducibility.\nI will randomly call on a pair to share"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#global-local-goals",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#global-local-goals",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Global and local goals\n\nReproducibility is\n\n\nGLOBAL GOAL\n\n‚Ä¶ a means to verify results and ensure scientific integrity\n\n\nLOCAL GOAL\n\n‚Ä¶ a mechanism for knowledge transfer and collaboration\n\n\n\nFeinberg et al. (2020)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#how-does-class-work",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#how-does-class-work",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "How does class work?\n\nReproduce a workflow (starting today!)\nLectures and interactive activities for learning goals\n\nAutomation\nOrganization\nDocumentation\nScale(ation)\nCollaboration"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#grading",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#grading",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Specification-based grading\n\n\nNo points out of 100\nA rubric of specifications (specs) for your final project\nMeet (or exceed) specs and participate in class - get an A\n\n\n\nFeedback loops are critical (no one-and-done)\n\n\n\nYou‚Äôll see more spec-based grading in other MEDS classes"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Course schedule\n\n\nCourse schedule for EDS 214"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule1",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Course schedule\n\n\nCourse schedule for EDS 214 (emphasizing day 1)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule2",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Course schedule\n\n\nCourse schedule for EDS 214 (emphasizing day 2)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule3",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule3",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Course schedule\n\n\nCourse schedule for EDS 214 (emphasizing day 3)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule4",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule4",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Course schedule\n\n\nCourse schedule for EDS 214 (emphasizing day 4)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule5",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#course-schedule5",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Course schedule\n\n\nCourse schedule for EDS 214 (emphasizing day 5)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-slides.html#works-cited",
    "href": "course-materials/lecture-slides/lecture-day1am-slides.html#works-cited",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Works cited\n\n\n\n\n\n\n\n\nFeinberg, Melanie, Will Sutherland, Sarah Beth Nelson, Mohammad Hossein Jarrahi, and Arcot Rajasekar. 2020. ‚ÄúThe New Reality of Reproducibility: The Role of Data Work in Scientific Research.‚Äù Proceedings of the ACM on Human-Computer Interaction 4 (CSCW1): 1‚Äì22. https://doi.org/10.1145/3392840.\n\n\nReproducibility and Replicability in Science. 2019. National Academies Press. https://doi.org/10.17226/25303.\n\n\nStoudt, Sara, V√°leri N. V√°squez, and Ciera C. Martinez. 2021. ‚ÄúPrinciples for Data Analysis Workflows.‚Äù Edited by Patricia M. Palagi. PLOS Computational Biology 17 (3): e1008770. https://doi.org/10.1371/journal.pcbi.1008770.\n\n\nWickham, Hadley, Mine √áetinkaya-Rundel, and Garrett Grolemund. 2023. R for Data Science: Import, Tidy, Transform, Visualize, and Model Data. 2nd ed. Sebastopol, CA: O‚ÄôReilly Media. https://r4ds.hadley.nz/."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#title-slide",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#title-slide",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Collaboration with GitHub\nEDS 214: Analytical Workflows and Scientific Reproducibility\n\nDay 3 Afternoon | August 27th, 2025"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#learning-objectives",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#learning-objectives",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "This afternoon, you‚Äôll learn how to‚Ä¶\n\nUse GitHub for project management and collaboration\n\nSpecific skills include:\n\nUse Issues to describe, discuss, and track code changes\nCompare and contrast branching/merging with forking/pull requests\nShare your outputs on GitHub Pages"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#recap",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#recap",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Recap\n\n\n\nThis morning you learned about branches. How to:\n\nCreate\nCommit\nMerge\n\nThese operations promote collaboration while working in the local git repository.\n\nGitHub also offers project management tools.\nThese tools integrate with features like branches and commits."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#code-evolves",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#code-evolves",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Code evolves\n\n\n\n\nWriting an analysis is an exploratory process.\nDiscussions and to-do items are easily lost.\nWe need project management tools to link problems, discussions, and code changes!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-1",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "A Simple Issue"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-2",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "A Simple Issue"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-3",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-3",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "A Simple Issue"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-4",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-4",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "A Simple Issue"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-5",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-5",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "A Simple Issue"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-1",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "A Complex Issue\n\n\n\n\n\nHere‚Äôs a more complex issue"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-2",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "A Complex Issue\n\n\n\n\n\nThis title suggests a new feature"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-3",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-3",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "A Complex Issue\n\n\n\n\n\nThe initial description describes the use case"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-4",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-4",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "A Complex Issue\n\n\n\n\n\nThis commit includes a prototype for the feature, with a list of questions that came up in the process."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-5",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-5",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "A Complex Issue\n\n\n\n\n\nLatter commits include the finished code plus some tests to verify it works."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-6",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues2-6",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "A Complex Issue\n\n\n\n\n\nAfter verifying the code works, the author closed the issue."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-recap",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#issues-recap",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Issues Recap\n\n\nIssues are a project management tool GitHub provides to help you track:\n\nBugs\nNew features\nDiscussions\nSolutions\n\nThe alternatives (comments, emails, Slack messages‚Ä¶) will eventually get you lost!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#branch-merge-vs-fork-pr",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#branch-merge-vs-fork-pr",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Branch/Merge vs Fork/Pull Request\n\n\n\n\nBranching and merging are local operations that help you manage your own work.\n\nForking and pull requests are remote operations that help you manage work with others."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#fork-pull-1",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#fork-pull-1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Fork/Pull Request\n\n\n\n\n\nYou‚Äôre familiar with local and remote repos."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#fork-pull-2",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#fork-pull-2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Fork/Pull Request\n\n\n\n\n\nA fork copies the remote repo. Pull requests send changes back to the original remote repo."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#fork-pull-3",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#fork-pull-3",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Fork/Pull Request\n\n\n\n\n\nThe connection between local and remote fork mirrors the local and remote original.."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#fork-pull-4",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#fork-pull-4",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Fork/Pull Request\n\n\n\n\n\nFork/pull is conceptually identical to branch/merge.\nThe difference is that fork/pull is a remote operation, while branch/merge is a local operation."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#forkpull-recap",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#forkpull-recap",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Fork/Pull Request Recap\n\n\nFork/Pull Request is a project management tool GitHub provides to help you manage code changes from multiple contributors.\n\nBugs\nNew features\nDiscussions\nSolutions\n\nThe alternatives (comments, emails, Slack messages‚Ä¶) will eventually get you lost!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "GitHub Pages\n\n\nGitHub Pages provides a free web presence for your projects.\nGreat for sharing your work with others.\nSharing URLs makes updates easy! Hunting for email attachments is hard!\nYou will use GitHub Pages for class assignments, Capstone, and your portfolio."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex1",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Meet Dr Eli Holmes\n\n\n\n\n\nMeet Dr Eli Holmes. Research scientist at NOAA. Expert in fisheries and open science."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex2",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Forecasting Sardines\n\n\n\n\n\nIn 2020, Dr Holmes led a paper about forecasting sardine landings."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex3",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex3",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "GitHub Repo\n\n\n\n\n\nHere‚Äôs the project‚Äôs GitHub repo - should look familiar.\nNote the URL under About. [username].github.io/[reponame]"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex4",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex4",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "GitHub Pages\n\n\n\n\n\nHere‚Äôs the project‚Äôs GitHub Pages site.\nPages sites can host documentation, results, and more."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex5",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex5",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Function Documentation\n\n\n\n\n\nDr Holmes used their Pages site for documentation on their functions and data."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex6",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#github-pages-ex6",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Back to GitHub\n\n\n\n\n\nThe function documentation links directly back to the source code on their GitHub repo."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#pages-recap",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#pages-recap",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "GitHub Pages Recap\n\n\nGitHub Pages give your projects a web presence.\nOn your project‚Äôs Pages site, you can host:\n\nDocumentation\nReports\nFigures\nDrafts\n\nAll your collaborators need is a URL!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-slides.html#break-it",
    "href": "course-materials/lecture-slides/lecture-day3pm-slides.html#break-it",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "But what if I break it?\n\n\n\nBowie is an environmental data scientist working on an analysis of pollution in local watersheds.\nShe manages her project in a GitHub repository, using Issues to track tasks and Pages to share her results with collaborators.\nHer two collaborators are Iggy and Nomi.\n\nIggy found a bug in Bowie‚Äôs data pre-processing step and asked her to fix it.\nNomi is busy with other projects and hasn‚Äôt had a chance to look at the Pages site yet.\n\nBowie is worried that while she‚Äôs fixing the bug Iggy found she might temporarily break the Pages site, which would delay Nomi‚Äôs input on the project.\n\nWhat should Bowie do to address Iggy‚Äôs bug while keeping the Pages site working for Nomi?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#title-slide",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#title-slide",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Documenting Scientific Code and Data\nEDS 214: Analytical Workflows and Scientific Reproducibility\n\nDay 2 Afternoon | August 26th, 2025"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#learning-objectives",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#learning-objectives",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "This afternoon, you‚Äôll learn:\n\n\n\nThe importance of documentation for reproducibility\nThe target audiences for different types of documentation\nHow to use READMEs, code comments, and code style to document your workflow"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#lego-activity",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#lego-activity",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "LEGO Blueprints Activity\n\nStep 1: Build (in pairs)\n\n\nForm pairs and receive LEGOs\nEach pair builds a LEGO structure. Get weird with it!\nTake a picture of the finished product\nDestroy the LEGO structure"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#lego-copy",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#lego-copy",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "LEGO Blueprints Activity\n\nStep 2: Copy (in pairs)\n\n\nSwitch LEGOs and pictures with another pair\nTry to replicate the structure using only the picture\nTake notes about challenges encountered"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#lego-share",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#lego-share",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "LEGO Blueprints Activity\n\nStep 3: Share (in quads)\n\n\nPairs compare original and finished structures\nTake notes about what was different\nDescribe 2-3 pieces of documentation that would have helped"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#lego-debrief",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#lego-debrief",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "LEGO Blueprints Activity\n\nStep 4: Debrief (as a class)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#documentation-types",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#documentation-types",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Types of Documentation\n\n\nREADME\n\nA file that (succintly) describes the project and how it works.\n\nComments\n\nAnnotations within the code to explain why.\n\nCode style\n\nA consistent format for writing code, including naming conventions and structure."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#readme-documentation",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#readme-documentation",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "README Documentation\n\nTypical README contents\n\nA short, but descriptive, title\nA brief explanation of the repository‚Äôs purpose\nA concise description of what‚Äôs housed in the repository\nDetails regarding data access\nA list of authors or current contributors (for collaborative work)\nReferences"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#code-comments",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#code-comments",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Code Comments\n\nFlavors of code comments\nHeaders\n\nDescribe file‚Äôs purpose, author, and date created/modified\n\nInline\n\nExplain complex logic, clarify assumptions, warn about edge cases\n\nFunction\n\nPurpose, parameters, and return values of functions"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#code-style",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#code-style",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Code Style\n\nReadability ‚Üí Comprehension ‚Üí Reproducibility\nConsistency is key! (Just like workflow folder organization)\nKey considerations:\n\nObject naming conventions\nSpacing and layout\nWriting and calling functions\nComments!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#documentation-scavenger-hunt",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#documentation-scavenger-hunt",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Documentation Scavenger Hunt\n\nInstructions\n\nForm groups of 3\nPick a published repository from yesterday\n\n\nhttps://github.com/kelpecosystems/global_kelp_time_series\nhttps://github.com/bencecc/ReefFishStability/tree/v1\nhttps://github.com/NCEAS/ca-mpa\n\n\nFind examples of READMEs, comments (header, inline, and function), and coding style in each repo\n\nNote: not every repo will have all of these!\n\nI will call on three groups to share"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#roxygen1",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#roxygen1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Roxygen\n\nRoxygen is a special commenting system for R functions.\n#' Norm of the jerk vector\n#'\n#' Uses Savitzky-Golay filtering to de-noise before differentiating acceleration\n#'\n#' @param A Tri-axial acceleration (n x 3 matrix)\n#' @param fs Sampling rate (Hz)\n#' @param p Order of Savitzky-Golay filter (3 by default)\n#' @param n Window size of Savitzky-Golay filter (11 by default)\n#'\n#' @return Norm of the jerk vector of A\n#' @export\njerk &lt;- function(A, fs, p = 3, n = 11) {\n  n &lt;- n + 1 - n %% 2\n  apply(A, 2, function(axis) signal::sgolayfilt(axis, p, n, m = 1))\n}"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#roxygen2",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#roxygen2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Roxygen\n\nRoxygen is a special commenting system for R functions."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-slides.html#documentation-recap",
    "href": "course-materials/lecture-slides/lecture-day2pm-slides.html#documentation-recap",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Documentation Recap\n\n\n\nWhy document?\n\nFacilitates collaboration\nSupports knowledge transfer\nPrevents nasty, horrible, awful headaches\n\n\nKey documentation types:\n\nREADMEs\nCode comments\nConsistent style"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#title-slide",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#title-slide",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Reproducible Workflows\nEDS 214: Analytical Workflows and Scientific Reproducibility\n\nDay 1 Afternoon | August 25th, 2025"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#workflow-organization",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#workflow-organization",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Workflow organization\n\nLet‚Äôs look at some examples of workflows on GitHub\nAll focus on nearby marine ecosystems, but the principles apply to any subject\nKeep your eyes peeled for these four components:\n\nRaw data\nCode\nOutputs\nDocumentation"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#kelp-me-kelp-you",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#kelp-me-kelp-you",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Kelp me kelp you\n\nGlobal patterns of kelp forest change over the past half-century (Krumhansl et al. 2016)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#mpas-protect",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#mpas-protect",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "MPAs protect against marine heatwaves\n\nMarine protected areas promote stability of reef fish communities under climate warming (Benedetti-Cecchi et al. 2024)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#mpas-dont-protect",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#mpas-dont-protect",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "MPAs don‚Äôt protect against marine heatwaves\n\nA marine protected area network does not confer community structure resilience to a marine heatwave across coastal ecosystems (Smith et al. 2023)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#workflow-jigsaw-pt1",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#workflow-jigsaw-pt1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Workflow organization jigsaw pt 1\n\n\n\n\nCount off 1-3\nFind 2-3 other students with your same number (i.e., a group with 3 1s, a group with 4 2s, etc.)\nEach group will look at one of the three workflows above\n\nhttps://github.com/kelpecosystems/global_kelp_time_series\nhttps://github.com/bencecc/ReefFishStability/tree/v1\nhttps://github.com/NCEAS/ca-mpa\n\n\n\nTry to find the following four components in the workflow:\n\nRaw data\nCode\nOutputs\nDocumentation\n\nFor each component, make a note of:\n\nThe name of the folder(s) containing it\nHow you found that component (intuition? documentation? parsing code?)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#workflow-jigsaw-pt2",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#workflow-jigsaw-pt2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Workflow organization jigsaw pt 2\n\n\nNow, form groups with one student from each workflow\nEach person shares what they found in their workflow\nAs a group, write down 2 traits of a workflow that make it easy and challenging to find things (4 traits total)\nProvide examples for each\nI will randomly call on a group to share"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#workflow-goals",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#workflow-goals",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "What are the goals for workflow organization?\n\n\nReproducibility\nAnother scientist (including Future You) should be able to repeat your analysis.\n\n\nMaintainability\nYou should be able to jump back in to editing your analysis, even if you haven‚Äôt looked at it in a while\n\n\nCollaboration\nYou should be able to share your analysis methods and results with others"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#tools-that-help",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#tools-that-help",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Tools that help with workflow organization\n\nGitHub\n\n\nVersion control - track your (and your collaborators‚Äô) changes\n\n\n\n\nIssues - a built-in to-do list directly connected to code and conversations\n\n\n\n\nBranches and pull requests - work in parallel and merge your work as seamlessly as possible\n\n\n\n\nGitHub Pages - a website for sharing your analysis with collaborators"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#tools-that-help-2",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#tools-that-help-2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Tools that help with workflow organization\n\nFolder organization\n\n\nIt‚Äôs less important which system you pick than it is to be consistent\n\n\n\n\nFree up cognitive load!\n\nBrainpower you spent figuring out where to put or find files - reallocated to your actual science\n\n\n\n\n\nFollow conventions\n\nBy playing nice with others you get to use their tools"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#flukeandfeather-workflow1",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#flukeandfeather-workflow1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Introducing: The FlukeAndFeather Workflow Organization System‚Ñ¢\n\n\nYou have before you a shuffled collection of folders and files\nYou have no context other than their names\nIn trios, try to:\n\nOrganize the folders and files hierarchically\nBriefly describe what you think the purpose of each folder/file is\nUse the two blank cards to add two files to the project\n\nWe will discuss your results in groups"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#flukeandfeather-workflow2",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#flukeandfeather-workflow2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Introducing: The FlukeAndFeather Workflow Organization System‚Ñ¢\n\nSNOWBALL\n\n\n5 minutes\n\nCombine pairs\nChoose a notetaker\nShare and combine into a single solution\nNotetaker writes down:\n\nOne example of differing solutions\nHow you decided which solution to use\nOne remaining question about a file/folder\n\n\n\n5 minutes\n\nCombine groups again to make groups of EIGHT(ish)\nChoose a new notetaker\nRepeat the exercise\n\n\n\nI will randomly call on two notetakers to share"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-slides.html#works-cited",
    "href": "course-materials/lecture-slides/lecture-day1pm-slides.html#works-cited",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Works cited\n\n\n\n\n\n\n\n\nBenedetti-Cecchi, Lisandro, Amanda E. Bates, Giovanni Strona, Fabio Bulleri, Barbara Horta e Costa, Graham J. Edgar, Bernat Hereu, et al. 2024. ‚ÄúMarine Protected Areas Promote Stability of Reef Fish Communities Under Climate Warming.‚Äù Nature Communications 15 (1). https://doi.org/10.1038/s41467-024-44976-y.\n\n\nKrumhansl, Kira A., Daniel K. Okamoto, Andrew Rassweiler, Mark Novak, John J. Bolton, Kyle C. Cavanaugh, Sean D. Connell, et al. 2016. ‚ÄúGlobal Patterns of Kelp Forest Change over the Past Half-Century.‚Äù Proceedings of the National Academy of Sciences 113 (48): 13785‚Äì90. https://doi.org/10.1073/pnas.1606102113.\n\n\nSmith, Joshua G., Christopher M. Free, Cori Lopazanski, Julien Brun, Clarissa R. Anderson, Mark H. Carr, Joachim Claudet, et al. 2023. ‚ÄúA Marine Protected Area Network Does Not Confer Community Structure Resilience to a Marine Heatwave Across Coastal Ecosystems.‚Äù Global Change Biology 29 (19): 5634‚Äì51. https://doi.org/10.1111/gcb.16862."
  },
  {
    "objectID": "course-materials/interactive/interactive-day3pm.html",
    "href": "course-materials/interactive/interactive-day3pm.html",
    "title": "Refactor a Function",
    "section": "",
    "text": "On Monday you wrote a tangled web of spaghetti code. Today, you‚Äôre going to reorganize the code without changing the functionality. That process, keeping outputs the same while cleaning the code, is called refactoring and it‚Äôs an essential step in creating, maintaining, and sharing workflows.\nIn most analyses, you won‚Äôt know exactly what you need to do fully in advance. Which means your initial implementation is going to be exploratory. Recall the figure below from Day 1 (Stoudt, V√°squez, and Martinez 2021). As you draft your code, you‚Äôll hit dead ends or pivot to new solutions. These dead ends yield confusing code that‚Äôs hard to read and build upon. This problem is inevitable! Refactoring is the solution.\n\n\n\nDeveloping a workflow is an exploratory process with many dead ends along the way. Dead ends lead to sloppy code. That‚Äôs ok! You can clean it up by refactoring. Reproduced from Stoudt et al.¬†(2021).\n\n\nOne good way to refactor your code is to write a function to perform a task. Writing a function provides several immediate benefits:\n\nThe function name (if chosen wisely) describes the task clearly and succinctly, which several lines of code may not do.\nA function separates the internal logic of the task (the function body) from the purpose it serves in your analysis (a script). That helps you focus your attention on one at a time, instead of mentally juggling both.\nIf you end up doing that task multiple times, you can reuse and maintain one function more easily than copy-paste-editing the same chunk multiple times (it‚Äôs also less error-prone)."
  },
  {
    "objectID": "course-materials/interactive/interactive-day3pm.html#background",
    "href": "course-materials/interactive/interactive-day3pm.html#background",
    "title": "Refactor a Function",
    "section": "",
    "text": "On Monday you wrote a tangled web of spaghetti code. Today, you‚Äôre going to reorganize the code without changing the functionality. That process, keeping outputs the same while cleaning the code, is called refactoring and it‚Äôs an essential step in creating, maintaining, and sharing workflows.\nIn most analyses, you won‚Äôt know exactly what you need to do fully in advance. Which means your initial implementation is going to be exploratory. Recall the figure below from Day 1 (Stoudt, V√°squez, and Martinez 2021). As you draft your code, you‚Äôll hit dead ends or pivot to new solutions. These dead ends yield confusing code that‚Äôs hard to read and build upon. This problem is inevitable! Refactoring is the solution.\n\n\n\nDeveloping a workflow is an exploratory process with many dead ends along the way. Dead ends lead to sloppy code. That‚Äôs ok! You can clean it up by refactoring. Reproduced from Stoudt et al.¬†(2021).\n\n\nOne good way to refactor your code is to write a function to perform a task. Writing a function provides several immediate benefits:\n\nThe function name (if chosen wisely) describes the task clearly and succinctly, which several lines of code may not do.\nA function separates the internal logic of the task (the function body) from the purpose it serves in your analysis (a script). That helps you focus your attention on one at a time, instead of mentally juggling both.\nIf you end up doing that task multiple times, you can reuse and maintain one function more easily than copy-paste-editing the same chunk multiple times (it‚Äôs also less error-prone)."
  },
  {
    "objectID": "course-materials/interactive/interactive-day3pm.html#goals",
    "href": "course-materials/interactive/interactive-day3pm.html#goals",
    "title": "Refactor a Function",
    "section": "Goals",
    "text": "Goals\nIn this session, you‚Äôre going to pick a task in your spaghetti code and refactor it into a function. As you do so, you‚Äôll learn how to apply two GitHub project management tools we covered in lecture: Issues and Pull Requests."
  },
  {
    "objectID": "course-materials/interactive/interactive-day3pm.html#instructions",
    "href": "course-materials/interactive/interactive-day3pm.html#instructions",
    "title": "Refactor a Function",
    "section": "Instructions",
    "text": "Instructions\n\nIdentify and describe the task\nIt‚Äôs probably hard to pick out a task directly from spaghetti code. That‚Äôs why it‚Äôs called spaghetti! It‚Äôs probably easier to refer to your flowchart. Pick a task in your workflow and answer the following questions. Picking the right scope for a task is subjective, and you may need to revise your answers a couple times to find the right level of complexity to refactor.\nQ1: What is the task? Plain language, 2-4 sentences.\nQ2: What are the task‚Äôs inputs? What data and parameters do you need to know to do the task?\nQ3: What is the task‚Äôs output? Be specific! If it‚Äôs a vector, what type (e.g., character or numeric) is it and how long is it? If it‚Äôs a data frame, what are the column names and what are their types? Are there constraints on what the output can be (e.g., sorted, range limits, etc)?\nQ4: Which lines of code in your spaghetti currently perform the task?\nAnswer these questions in a GitHub Issue in your repo (instructions here). For Q4, you should directly link to the code snippet.\n\n\nWrite your function\nIn the FlukeAndFeather Workflow Organization System‚Ñ¢Ô∏è, functions go in scripts in the R/ directory. This is a common convention for organizing R projects.\nBefore proceeding, create a branch and switch to it.\nCreate a script in the R/ directory. Give it a name that describes your task.\nWrite a function to perform your task. Your answers from the previous section should guide you!\n\nYour answer to Q1 should help you pick the function‚Äôs name.\nYour answer to Q2 defines the function‚Äôs parameters.\nYour answer to Q3 defines the function‚Äôs return value.\nYour answer to Q4 is the starting point for the function body.\n\nHere‚Äôs a simple function to refresh your memory for R function syntax.\nadd_nums &lt;- function(num1, num2) {\n  result &lt;- num1 + num2\n  return(result)\n}\n\n\n\n\n\n\nTip\n\n\n\nSteps ‚ÄúIdentify and describe the task‚Äù and ‚ÄúWrite your function‚Äù probably will require some iteration. As you start writing your function, you may find it makes sense to redefine your task, add or remove a parameter, or reformat the output. That‚Äôs all part of the process!\n\n\n\n\nRefactor your spaghetti\nYou‚Äôve defined your function, now it‚Äôs time to use it.\n\nAt the beginning of your analysis script (the spaghetti), use the source() function to load your function. If your function is in foo.R, you‚Äôd write source(\"R/foo.R\").\nReplace the code you identified in Q4 with a call to your function.\nRun your analysis script and verify the results remain the same. This will probably require some debugging!\n\n\n\nCommit your changes and create a pull request\nTypically, pull requests occur between forked repos. But they can also be used between branches in the same remote repo. There are fewer moving parts when you stay in a single repo, so that‚Äôs what we‚Äôll start with today. You‚Äôll create a fork and pull request tomorrow during peer review.\n\nCommit your changes. In your commit message, say this commit addresses the Issue you created earlier. If you created Issue #1, your commit message should include ‚ÄúSee #1‚Äù.\nPush your commit.\nNavigate to your repo on GitHub. Switch to the Pull requests tab. You should see a yellow notification that one of your branches had a recent push, and a green button saying Compare & pull request. Click on that green button (not New pull request).\n\n\n\n\nMake sure you click on ‚ÄúCompare & pull request‚Äù, not ‚ÄúNew pull request‚Äù.\n\n\n\nYou have the option to add a title and description. By default, your title will be the latest commit message. If you wrote something descriptive and succinct, you can keep it. The description should say what your pull request does. The issue you opened earlier should have most of the details, but if you learned something along the way that‚Äôs not in the issue then this is the place to include it.\nClick on the green Create pull request button.\nGitHub will notify you if there are any merge conflicts. Unless you edited your main branch separately, there shouldn‚Äôt be any. Click on the green Merge pull request button, then the green Confirm merge button. You should see a purple merge icon and a message saying it‚Äôs now safe to delete the branch you made.\nSwitch back to the Issue you made earlier. You should now see 2 commits that reference the issue: the commit you made locally and the pull request itself. Close the issue by clicking the Close issue button with the purple check mark next to it.\n\n\n\n\nNotice the ‚Äú#2‚Äù next to the pull request. Each pull request gets its own Issue! That‚Äôs useful for tracking sets of changes from collaborators."
  },
  {
    "objectID": "course-materials/interactive/interactive-day3pm.html#recap",
    "href": "course-materials/interactive/interactive-day3pm.html#recap",
    "title": "Refactor a Function",
    "section": "Recap",
    "text": "Recap\nIn this session you used GitHub‚Äôs project management tools (Issues and Pull requests) to make improvements to your repo.\nIssues are important for collaboration because:\n\nThe Issue describes the problem (e.g., what needs to be refactored).\nCollaborators can discuss the solution in the Issue thread.\nThe discussion can directly link to the relevant lines of code.\n\nYou made an internal pull request in your own repo today, which familiarized you with the process. Tomorrow you‚Äôll fork a partner‚Äôs repo and create an external pull request."
  },
  {
    "objectID": "course-materials/interactive/interactive-day2pm.html",
    "href": "course-materials/interactive/interactive-day2pm.html",
    "title": "READMEs, Style, and Comments",
    "section": "",
    "text": "In the afternoon lecture, you learned about the importance of documentation for workflow reproducibility. Documentation is an essential part of communicating how your analysis works and why you made your design choices.\nAlways keep the target audience for your documentation in mind as you write it! Typically, for a workflow, your target audience is someone interested in reproducing or building on your work. This could be:\n\nA scientist you‚Äôll never meet directly\nA collaborator who is also contributing to the code\nFuture you (you‚Äôd be surprised by what they can forget)"
  },
  {
    "objectID": "course-materials/interactive/interactive-day2pm.html#background",
    "href": "course-materials/interactive/interactive-day2pm.html#background",
    "title": "READMEs, Style, and Comments",
    "section": "",
    "text": "In the afternoon lecture, you learned about the importance of documentation for workflow reproducibility. Documentation is an essential part of communicating how your analysis works and why you made your design choices.\nAlways keep the target audience for your documentation in mind as you write it! Typically, for a workflow, your target audience is someone interested in reproducing or building on your work. This could be:\n\nA scientist you‚Äôll never meet directly\nA collaborator who is also contributing to the code\nFuture you (you‚Äôd be surprised by what they can forget)"
  },
  {
    "objectID": "course-materials/interactive/interactive-day2pm.html#goals",
    "href": "course-materials/interactive/interactive-day2pm.html#goals",
    "title": "READMEs, Style, and Comments",
    "section": "Goals",
    "text": "Goals\nDuring this interactive session, you will implement each of the following in your replication project:\n\nA repository README\nThe Tidyverse Style Guide\nComments (header and inline)"
  },
  {
    "objectID": "course-materials/interactive/interactive-day2pm.html#instructions",
    "href": "course-materials/interactive/interactive-day2pm.html#instructions",
    "title": "READMEs, Style, and Comments",
    "section": "Instructions",
    "text": "Instructions\n\nWrite a README\nFirst, you will critique a README that your instructor wrote for an analysis.\n\nReview the six requirements for READMEs from the lecture slides.\nRead the README for the GitHub repo found here.\nCritique the README according to the requirements1. Write these down - I will call on a few students randomly to share.\n\nNow, it‚Äôs your turn to implement a README in your replication project repo.\n\nCreate a file in your project root called README.md.\nFill out the README to describe your project.\n\n\n\nAdopt the Tidyverse Style Guide\nAs with file organization, how you style your code is less important than applying a consistent style. A principal benefit of adopting the Tidyverse Style Guide is you get to bypass the work of coming up with your own rules and devote that energy to your analysis, instead.\n\nQuickly skim sections 2-5 of the style guide to familiarize yourself with the content and format.\nChoose three lines/chunks in your analysis code to revise according to a style guide rule. Two rules must be from chapter 2 Syntax, one rule must be from a different chapter. For example, you could:\n\nWrap a long function call (rule 2.4.3)\nReplace single with double quotes (rule 2.9.1)\nAdd whitespace to a pipe (rule 4.2)\n\n\n\n\nAdd comments\nThere are several different types of comments that are important for documenting an analysis. Today, you‚Äôll add header and inline comments. You‚Äôll add a third type, function comments, tomorrow.\nRemember, comments should always describe why not what. As you gain experience coding, the functionality of code (the what) should become self-evident. But the reason (the why) you chose to do something in a particular way may not be.\nThere is a subjective balance between over- and under-commenting. Make your best attempt in this session. You‚Äôll have opportunities for self-assessment and peer feedback later in the week.\n\nAdd header comments to your spaghetti script. The comments should include:\nPurpose of the script\nThe authors\nA contact email\nAdd 1-2 inline comments to your spaghetti script. Write your inline comments to describe a why, not a what. Examples of why include:\nThe justification for a threshold value\nExplaining an edge case that needs special handling\nSeparate from your spaghetti script, make a note of who the target audience is for your comments and how your comments would help them. I will randomly call on two students to share."
  },
  {
    "objectID": "course-materials/interactive/interactive-day2pm.html#recap",
    "href": "course-materials/interactive/interactive-day2pm.html#recap",
    "title": "READMEs, Style, and Comments",
    "section": "Recap",
    "text": "Recap\nIn this interactive session you gained practical experience documenting your workflow. You created a repo for your analysis, formatted your code according to a style guide, and added comments to clarify your script. These changes make it easier for your target audience to comprehend your workflow - a key baseline for reproducibility."
  },
  {
    "objectID": "course-materials/interactive/interactive-day2pm.html#footnotes",
    "href": "course-materials/interactive/interactive-day2pm.html#footnotes",
    "title": "READMEs, Style, and Comments",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nBe nice‚Ü©Ô∏é"
  },
  {
    "objectID": "course-materials/interactive/interactive-day1pm.html",
    "href": "course-materials/interactive/interactive-day1pm.html",
    "title": "Make Spaghetti",
    "section": "",
    "text": "This morning you looked at the raw data and one output (Figure 3) of Schaefer et al. (2000).\nYou explored the data and examined the information available in the paper about how the paper was made.\nUsing those two elements, you created flowcharts planning your analysis."
  },
  {
    "objectID": "course-materials/interactive/interactive-day1pm.html#previously-on-eds-214",
    "href": "course-materials/interactive/interactive-day1pm.html#previously-on-eds-214",
    "title": "Make Spaghetti",
    "section": "",
    "text": "This morning you looked at the raw data and one output (Figure 3) of Schaefer et al. (2000).\nYou explored the data and examined the information available in the paper about how the paper was made.\nUsing those two elements, you created flowcharts planning your analysis."
  },
  {
    "objectID": "course-materials/interactive/interactive-day1pm.html#goals",
    "href": "course-materials/interactive/interactive-day1pm.html#goals",
    "title": "Make Spaghetti",
    "section": "Goals",
    "text": "Goals\nIn this session you‚Äôre going to take an important step towards your ultimate goal of reproducing figure 3 from Schaefer et al. (2000): make spaghetti code.\n\nYou can think of spaghetti as the alternative to a workflow. Instead of a well-organized analysis with clear connections between data, code, and outputs, spaghetti jumbles all these components together.\nImagine you want to change one part of your analysis. Perhaps you received some new data, or a collaborator suggests trying a different type of statistical model. Simply figuring out which lines of code need your attention is challenging when it‚Äôs all spaghetti. What‚Äôs worse, when you change one thing there‚Äôs a good chance you‚Äôll break a lot of other things downstream.\n\n\n\n\n\n\nNote\n\n\n\nSpaghetti sounds pretty bad, doesn‚Äôt it? While it‚Äôs true that you don‚Äôt want your finished product to look like spaghetti, it‚Äôs often a necessary intermediate step. Science is a creative and iterative process. We often don‚Äôt know exactly what we need to do before we begin. As we explore, we create spaghetti. By creating spaghetti we develop our conceptual understanding of what our workflow should look like. Only then can we begin making a well-organized workflow."
  },
  {
    "objectID": "course-materials/interactive/interactive-day1pm.html#instructions",
    "href": "course-materials/interactive/interactive-day1pm.html#instructions",
    "title": "Make Spaghetti",
    "section": "Instructions",
    "text": "Instructions\n\nMake spaghetti\n\nPicking up where we left off this morning, create a new script in your RStudio project. Put it in your scratch/ directory.\nBegin writing code to implement your flowchart.\nKeep writing code until you can create a figure.\n\n\n\n\n\n\n\nImportant\n\n\n\nThe goal of this exercise is to create spaghetti. I want you to get messy with it. Add comments haphazardly. If you find out your code is going down a dead end, just leave it there and start on a new line. Choose variable names without thinking about them. Don‚Äôt worry if the figure you create at the end looks nothing like how it‚Äôs supposed to.\n\n\n\n\nRevise your flowchart\n\nRe-read your flowchart from this morning.\nRevise your flowchart with what you learned from making spaghetti. In the process of writing code, did you learn more details about the workflow? Were there steps you didn‚Äôt consider earlier? Did you discover any steps that should be split or lumped?\nMake a note of 1-2 changes you made to your flowchart. I will randomly call on two students to share."
  },
  {
    "objectID": "course-materials/interactive/interactive-day1pm.html#coming-up-next",
    "href": "course-materials/interactive/interactive-day1pm.html#coming-up-next",
    "title": "Make Spaghetti",
    "section": "Coming up next",
    "text": "Coming up next\nYou now have two important elements of your workflow: a revised plan and a plate of spaghetti.\nOver the next few days, you will learn how to transform spaghetti into a well-organized, thoroughly documented, and easily reproducible analysis."
  },
  {
    "objectID": "course-materials/final-project/final-project.html",
    "href": "course-materials/final-project/final-project.html",
    "title": "Final Project",
    "section": "",
    "text": "The final project for EDS 214 is to create an analytical workflow to reproduce figure 3 of Schaefer et al. (2000). This project is your opportunity to gain and demonstrate competency in the learning goals of this course."
  },
  {
    "objectID": "course-materials/final-project/final-project.html#goals",
    "href": "course-materials/final-project/final-project.html#goals",
    "title": "Final Project",
    "section": "",
    "text": "The final project for EDS 214 is to create an analytical workflow to reproduce figure 3 of Schaefer et al. (2000). This project is your opportunity to gain and demonstrate competency in the learning goals of this course."
  },
  {
    "objectID": "course-materials/final-project/final-project.html#milestones",
    "href": "course-materials/final-project/final-project.html#milestones",
    "title": "Final Project",
    "section": "Milestones",
    "text": "Milestones\n\nMonday August 25th\n\nDraft a flowchart that visually describes the plan for your analysis\nWrite spaghetti code that accomplishes some of the steps in your analysis\n\n\n\nTuesday August 26th\n\nDraft documentation for your data and code\nCause a merge conflict\n\n\n\nWednesday August 27th\n\nResolve a merge conflict\nCreate GitHub Issues to describe and organize tasks\nMerge changes using Pull requests\n\n\n\nThursday August 28th\n\nFinish drafting your reproducible workflow\nPerform a self-assessment and peer review to critique workflows\n\n\n\nFriday August 26th\n\nSubmit your final project for instructor feedback\nIncorporate feedback to refine your workflow\nCelebrate completing EDS 214!"
  },
  {
    "objectID": "course-materials/final-project/final-project.html#specifications",
    "href": "course-materials/final-project/final-project.html#specifications",
    "title": "Final Project",
    "section": "Specifications",
    "text": "Specifications\nYour final project will be assessed according to specifications spread across the five learning objectives. I will give you feedback on each specification and assess your work as Not yet or Meets spec. A few specifications (indicated in bold below) offer opportunities for Exceeds spec. You will have an opportunity to incorporate my feedback and move your assessments up a category.\n\n\n\n\n\n\nNote\n\n\n\nWhat‚Äôs the difference between Meets and Exceeds spec? In brief, professionalism. To meet a spec, you have to demonstrate your competency. To exceed a spec, you have to demonstrate that competency as you would in the workplace. The difference is subjective and beauty is, admittedly, in the eye of the beholder. I suggest keeping the following in mind as you complete your final project:\n\nYou will have multiple opportunities to receive and incorporate feedback.\nThe bar for an A is exceeding two (2) specs in different learning objectives.\nLearning the subjective difference between ‚Äúgood enough‚Äù and ‚Äúprofessional quality‚Äù is an important outcome of this program!\n\n\n\n\nAutomate\n[ ] Running the entire analysis requires rendering one Quarto document\n[ ] The analysis runs without errors\n[ ] The analysis produces the expected output\n[ ] Data import/cleaning is handled in its own script(s)\n\n\nOrganize\n[ ] Raw data is contained in its own folder\n[ ] Intermediate outputs are created and saved to a separate folder from raw data\n[ ] At least one piece of functionality has been refactored into a function in its own file\n\n\nDocument\n[ ] The repo has a README that explains where to find (1) data, (2) analysis script, (3) supporting code, and (4) outputs\n[ ] The README includes a flowchart and text explaining how the analysis works\n[ ] The code is appropriately commented\n[ ] Variable and function names are descriptive and follow a consistent naming convention\n\n\nScale\nAfter cloning the repo on Workbench:\n[ ] Running the environment initialization script installs all required packages\n[ ] The analysis script runs without errors\n\n\nCollaborate\n[ ] The student has provided attentive, constructive feedback in a peer review\n[ ] The student has contributed to a peer‚Äôs repo by opening an issue and creating a pull request\n[ ] The repo has at least three closed GitHub issues\n[ ] The commit history includes at least one merged branch and a resolved merge conflict\n[ ] The rendered analysis is accessible via GitHub Pages"
  },
  {
    "objectID": "course-materials/final-project/final-project-self-assessment.html",
    "href": "course-materials/final-project/final-project-self-assessment.html",
    "title": "Final Project Self Assessment",
    "section": "",
    "text": "This self assessment is an opportunity to critically evaluate your workflow and refine your work. To be clear, ‚Äúcritical evaluation‚Äù doesn‚Äôt mean you should be harsh or negative about your work! You‚Äôve learned a lot this week. The self assessment is a chance for you to see how far you‚Äôve come, reinforce the lessons you‚Äôve learned, and begin preparations to wrap up this course."
  },
  {
    "objectID": "course-materials/final-project/final-project-self-assessment.html#goal",
    "href": "course-materials/final-project/final-project-self-assessment.html#goal",
    "title": "Final Project Self Assessment",
    "section": "",
    "text": "This self assessment is an opportunity to critically evaluate your workflow and refine your work. To be clear, ‚Äúcritical evaluation‚Äù doesn‚Äôt mean you should be harsh or negative about your work! You‚Äôve learned a lot this week. The self assessment is a chance for you to see how far you‚Äôve come, reinforce the lessons you‚Äôve learned, and begin preparations to wrap up this course."
  },
  {
    "objectID": "course-materials/final-project/final-project-self-assessment.html#instructions",
    "href": "course-materials/final-project/final-project-self-assessment.html#instructions",
    "title": "Final Project Self Assessment",
    "section": "Instructions",
    "text": "Instructions\nThe final project specs are listed on the Final Project page. You are going to assess your own work for each spec (except the Collaborate specs).\n\nCreate a markdown file in your project repo called self-assessment.md.\nCreate one header for each category of specs (except Collaborate) and a subheader for each individual spec.\nFor each spec, assess your work as Not yet or Meets spec. In one to two sentences, explain your assessment.\n\nFor each spec you assess as Not yet, open an Issue on GitHub describing what you think you would need to do to meet the spec.\n(Optional) Choose two specs that are eligible for Exceeds spec. Open an Issue for each one describing what you would do to exceed the spec. [Exceeding two specs is a requirement for an A. You can get an A without doing this step, but this will help!]\n\nCommit and push your changes to GitHub. Open an Issue and give it the title ‚ÄúSelf Assessment‚Äù. Tag my username (@FlukeAndFeather) in the body of the Issue so I get a notification about it."
  },
  {
    "objectID": "course-materials/day5.html",
    "href": "course-materials/day5.html",
    "title": "Final project self-assessment and peer feedback",
    "section": "",
    "text": "No lectures today! All interactive sessions.\n\n\n\n Session\n Interactive session\n Interactive session\n Reflection\n\n\n\n\nMorning\nMeet your next instructor\nFinal project submission\nMorning reflection\n\n\nAfternoon\nInstructor feedback\nOpen working time\nAfternoon reflection"
  },
  {
    "objectID": "course-materials/day5.html#class-materials",
    "href": "course-materials/day5.html#class-materials",
    "title": "Final project self-assessment and peer feedback",
    "section": "",
    "text": "No lectures today! All interactive sessions.\n\n\n\n Session\n Interactive session\n Interactive session\n Reflection\n\n\n\n\nMorning\nMeet your next instructor\nFinal project submission\nMorning reflection\n\n\nAfternoon\nInstructor feedback\nOpen working time\nAfternoon reflection"
  },
  {
    "objectID": "course-materials/day3.html",
    "href": "course-materials/day3.html",
    "title": "Git and GitHub for Workflows",
    "section": "",
    "text": "Session\n Lecture slides\n Interactive session\n Reflection\n\n\n\n\nMorning\nVersion control with git\nGit branching\nMorning reflection\n\n\nAfternoon\nCollaboration with GitHub\nRefactor a function\nAfternoon reflection"
  },
  {
    "objectID": "course-materials/day3.html#class-materials",
    "href": "course-materials/day3.html#class-materials",
    "title": "Git and GitHub for Workflows",
    "section": "",
    "text": "Session\n Lecture slides\n Interactive session\n Reflection\n\n\n\n\nMorning\nVersion control with git\nGit branching\nMorning reflection\n\n\nAfternoon\nCollaboration with GitHub\nRefactor a function\nAfternoon reflection"
  },
  {
    "objectID": "course-materials/day3.html#further-reading",
    "href": "course-materials/day3.html#further-reading",
    "title": "Git and GitHub for Workflows",
    "section": "Further reading",
    "text": "Further reading\n\nBryan (2018) explains why data scientists should embrace the project management benefits of git and GitHub\n\n\nIn my opinion, for new users, the advantages of Git only outweigh the disadvantages when you consider the overhead of working with other people, including your future self. And who among us does not need to do that? In a Git-based workflow, you document and, optionally, expose your work as you go. Communication and collaboration are the killer apps of version control. Git‚Äôs model of file management can feel uncomfortably rigid, but it enables the distribution of files across different people, computers, and time.\n\n\nBraga et al. (2023) present 12 reasons scientists should use GitHub for collaboration, communication, and project management."
  },
  {
    "objectID": "course-materials/day1.html",
    "href": "course-materials/day1.html",
    "title": "Workflows and reproducibility",
    "section": "",
    "text": "Session\n Lecture slides\n Interactive session\n Reflection\n\n\n\n\nMorning\nReproducible workflows\nPlan an analysis\nGo with the flow\n\n\nAfternoon\nWorkflow organization\nMake spaghetti\nCourse goals"
  },
  {
    "objectID": "course-materials/day1.html#class-materials",
    "href": "course-materials/day1.html#class-materials",
    "title": "Workflows and reproducibility",
    "section": "",
    "text": "Session\n Lecture slides\n Interactive session\n Reflection\n\n\n\n\nMorning\nReproducible workflows\nPlan an analysis\nGo with the flow\n\n\nAfternoon\nWorkflow organization\nMake spaghetti\nCourse goals"
  },
  {
    "objectID": "course-materials/day1.html#further-reading",
    "href": "course-materials/day1.html#further-reading",
    "title": "Workflows and reproducibility",
    "section": "Further reading",
    "text": "Further reading\n\nStoudt, V√°squez, and Martinez (2021) describe how analytical workflows evolve, what they look like in the end, and how they‚Äôre necessary for data-intensive science.\nLowndes et al. (2017) present a case study on their own team-based research. They show how an emphasis on reproducibility improves efficiency as well as transparency."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-notes.html",
    "href": "course-materials/lecture-slides/lecture-day3pm-notes.html",
    "title": "Collaboration with GitHub",
    "section": "",
    "text": "This morning you learned how to create, work in, and merge branches. These operations promote collaboration while working in the local git repository.\nGitHub offers project management tools that integrate with git features like branches and commits.\n\n\n\nBy the end of this lesson, you will be able to:\n\nUse Issues to describe, discuss, and track code changes\nCompare the shared and distinct concepts of branching/merging and forking/pull requests\nShare your outputs on GitHub Pages\n\n\n\n\n[column 1]\nWriting an analysis is an exploratory process, filled with dead ends.\nLists of bugs and discussions about to-do items easily get lost.\nWe need a project management tool to link issues, discussions, and code changes!\n[column 2]\n[confused gandalf meme]\n\n\n\nfive slides, progressing through images/day3/issues\nYou will open, discuss, and close issues in the interactive session.\n\n\n\nBranching and merging are local operations that help you manage your own work.\nForking and pull requests are remote operations that help you manage work with others.\nfive slides, progressing through images/day3/forkpull\nFork/Pull Request is a recommended system for your Capstone!\n\n\n\nGitHub Pages is a free service that easily gives your projects web presence.\nGreat for sharing your work with others.\nURL easy! Hunting for email attachments hard!\nLive demo: samanthacsik/OHI-quarto-websites\nYou will use GitHub Pages for class assignments, Capstone, and your portfolio."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-notes.html#recap",
    "href": "course-materials/lecture-slides/lecture-day3pm-notes.html#recap",
    "title": "Collaboration with GitHub",
    "section": "",
    "text": "This morning you learned how to create, work in, and merge branches. These operations promote collaboration while working in the local git repository.\nGitHub offers project management tools that integrate with git features like branches and commits."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-notes.html#learning-objectives",
    "href": "course-materials/lecture-slides/lecture-day3pm-notes.html#learning-objectives",
    "title": "Collaboration with GitHub",
    "section": "",
    "text": "By the end of this lesson, you will be able to:\n\nUse Issues to describe, discuss, and track code changes\nCompare the shared and distinct concepts of branching/merging and forking/pull requests\nShare your outputs on GitHub Pages"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-notes.html#code-evolves",
    "href": "course-materials/lecture-slides/lecture-day3pm-notes.html#code-evolves",
    "title": "Collaboration with GitHub",
    "section": "",
    "text": "[column 1]\nWriting an analysis is an exploratory process, filled with dead ends.\nLists of bugs and discussions about to-do items easily get lost.\nWe need a project management tool to link issues, discussions, and code changes!\n[column 2]\n[confused gandalf meme]"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-notes.html#issues",
    "href": "course-materials/lecture-slides/lecture-day3pm-notes.html#issues",
    "title": "Collaboration with GitHub",
    "section": "",
    "text": "five slides, progressing through images/day3/issues\nYou will open, discuss, and close issues in the interactive session."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-notes.html#branchmerge-vs-forkpull-request",
    "href": "course-materials/lecture-slides/lecture-day3pm-notes.html#branchmerge-vs-forkpull-request",
    "title": "Collaboration with GitHub",
    "section": "",
    "text": "Branching and merging are local operations that help you manage your own work.\nForking and pull requests are remote operations that help you manage work with others.\nfive slides, progressing through images/day3/forkpull\nFork/Pull Request is a recommended system for your Capstone!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3pm-notes.html#github-pages",
    "href": "course-materials/lecture-slides/lecture-day3pm-notes.html#github-pages",
    "title": "Collaboration with GitHub",
    "section": "",
    "text": "GitHub Pages is a free service that easily gives your projects web presence.\nGreat for sharing your work with others.\nURL easy! Hunting for email attachments hard!\nLive demo: samanthacsik/OHI-quarto-websites\nYou will use GitHub Pages for class assignments, Capstone, and your portfolio."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-notes.html",
    "href": "course-materials/lecture-slides/lecture-day2pm-notes.html",
    "title": "Documenting Scientific Code and Data - 50-Minute Lecture Outline",
    "section": "",
    "text": "Active learning exercise with four steps.\n\nBuild (in pairs) Form pairs and receive LEGOs Each pair builds a LEGO structure. Get weird with it! Take a picture of the finished product Destroy the LEGO structure\nCopy (in pairs) Switch legos and pictures with another pair Try to replicate the structure using only the picture Take notes about challenges encountered\nShare (in quads) Pairs compare original and finished structures Take notes about what was different Describe 2-3 pieces of documentation that would have helped\nDebrief (as a class) Draw two axes. Left-to-right: Acquisition to Application. Top-to-bottom: Action to Cognition Place the documentation pieces on the axes\n\n\n\n\nA framework for structuring documentation into four distinct areas:\n\nTutorials\nHow-to guides\nReference\nExplanation\n\n(Place them on the map)\nEach area serves a different purpose and audience.\nA tool needs all four areas. An analysis probably needs a subset. Why? (Think-pair-share)\n\n\n\n\n\nThings you should always include in your GitHub repository READMEs:\nNOTE: these core elements are required for all MEDS-related homework assignments and projects\nProvide an example\n\nA short, but descriptive title\nA brief explanation of the repository‚Äôs purpose\nA concise description of what‚Äôs housed in the repository\nDetails regarding data access\nA list of authors or current contributors (for collaborative work)\nReferences\n\n\n\n\nProvide an example\nTypes of comments. [add examples]\n\nHeaders\nInline\nFunctions\n\nParameters\nReturn value\nExample usage\n\n\n\n\n\nProvide an example\nReadability -&gt; Comprehension -&gt; Reproducibility\nConsistency is key! (Just like workflow folder organization)\nConsiderations:\n\nObject naming\nSpacing and layout\nWriting and calling functions\nComments!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-notes.html#lego-blueprints",
    "href": "course-materials/lecture-slides/lecture-day2pm-notes.html#lego-blueprints",
    "title": "Documenting Scientific Code and Data - 50-Minute Lecture Outline",
    "section": "",
    "text": "Active learning exercise with four steps.\n\nBuild (in pairs) Form pairs and receive LEGOs Each pair builds a LEGO structure. Get weird with it! Take a picture of the finished product Destroy the LEGO structure\nCopy (in pairs) Switch legos and pictures with another pair Try to replicate the structure using only the picture Take notes about challenges encountered\nShare (in quads) Pairs compare original and finished structures Take notes about what was different Describe 2-3 pieces of documentation that would have helped\nDebrief (as a class) Draw two axes. Left-to-right: Acquisition to Application. Top-to-bottom: Action to Cognition Place the documentation pieces on the axes"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-notes.html#the-di√°taxis-map",
    "href": "course-materials/lecture-slides/lecture-day2pm-notes.html#the-di√°taxis-map",
    "title": "Documenting Scientific Code and Data - 50-Minute Lecture Outline",
    "section": "",
    "text": "A framework for structuring documentation into four distinct areas:\n\nTutorials\nHow-to guides\nReference\nExplanation\n\n(Place them on the map)\nEach area serves a different purpose and audience.\nA tool needs all four areas. An analysis probably needs a subset. Why? (Think-pair-share)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2pm-notes.html#documentation-types",
    "href": "course-materials/lecture-slides/lecture-day2pm-notes.html#documentation-types",
    "title": "Documenting Scientific Code and Data - 50-Minute Lecture Outline",
    "section": "",
    "text": "Things you should always include in your GitHub repository READMEs:\nNOTE: these core elements are required for all MEDS-related homework assignments and projects\nProvide an example\n\nA short, but descriptive title\nA brief explanation of the repository‚Äôs purpose\nA concise description of what‚Äôs housed in the repository\nDetails regarding data access\nA list of authors or current contributors (for collaborative work)\nReferences\n\n\n\n\nProvide an example\nTypes of comments. [add examples]\n\nHeaders\nInline\nFunctions\n\nParameters\nReturn value\nExample usage\n\n\n\n\n\nProvide an example\nReadability -&gt; Comprehension -&gt; Reproducibility\nConsistency is key! (Just like workflow folder organization)\nConsiderations:\n\nObject naming\nSpacing and layout\nWriting and calling functions\nComments!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-notes.html",
    "href": "course-materials/lecture-slides/lecture-day1pm-notes.html",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Let‚Äôs look at some examples of workflows on GitHub\nAll focus on nearby marine ecosystems, but the principles apply to any subject\nKeep your eyes peeled for these four components:\n\nRaw data\nCode\nOutputs\nDocumentation"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-notes.html#workflow-organization",
    "href": "course-materials/lecture-slides/lecture-day1pm-notes.html#workflow-organization",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Let‚Äôs look at some examples of workflows on GitHub\nAll focus on nearby marine ecosystems, but the principles apply to any subject\nKeep your eyes peeled for these four components:\n\nRaw data\nCode\nOutputs\nDocumentation"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-notes.html#kelp-me-kelp-you",
    "href": "course-materials/lecture-slides/lecture-day1pm-notes.html#kelp-me-kelp-you",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "Kelp me kelp you",
    "text": "Kelp me kelp you\n\nKrumhansl et al.¬†2016 PNAS\nhttps://github.com/kelpecosystems/global_kelp_time_series\nFig 4: kelp forests declining globally"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-notes.html#mpas-protect-against-marine-heatwaves",
    "href": "course-materials/lecture-slides/lecture-day1pm-notes.html#mpas-protect-against-marine-heatwaves",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "MPAs protect against marine heatwaves",
    "text": "MPAs protect against marine heatwaves\n\nBenedetti-Cecchi et al.¬†2024 NatComms\nhttps://github.com/bencecc/ReefFishStability/tree/v1\nFig 3a,b: In MPAs, reef fish stability is affected more by remoteness than heatwaves. Pattern reversed in open areas."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-notes.html#mpas-dont-protect-against-marine-heatwaves",
    "href": "course-materials/lecture-slides/lecture-day1pm-notes.html#mpas-dont-protect-against-marine-heatwaves",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "MPAs don‚Äôt protect against marine heatwaves",
    "text": "MPAs don‚Äôt protect against marine heatwaves\n\nSmith et al.¬†2023 GCB\nhttps://github.com/NCEAS/ca-mpa\nFig 3: Only rocky intertidal sites exhibited resistance and recovery in MPAs"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-notes.html#workflow-organization-jigsaw-pt-1",
    "href": "course-materials/lecture-slides/lecture-day1pm-notes.html#workflow-organization-jigsaw-pt-1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "Workflow organization jigsaw pt 1",
    "text": "Workflow organization jigsaw pt 1\n\nCount off 1-3\nFind 2-3 other students with your same number (i.e., a group with 3 1s, a group with 4 2s, etc.)\nEach group will look at one of the three workflows above\n\n1: Krumhansl et al.¬†2016 PNAS\n2: Benedetti-Cecchi et al.¬†2024 NatComms\n3: Smith et al.¬†2023 GCB\n\nTry to find the following four components in the workflow:\n\nRaw data\nCode\nOutputs\nDocumentation\n\nFor each component, make a note of:\n\nThe name of the folder(s) containing it\nConnections with other components\nHow you found that component (intuition? documentation? parsing code?)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-notes.html#workflow-organization-jigsaw-pt-2",
    "href": "course-materials/lecture-slides/lecture-day1pm-notes.html#workflow-organization-jigsaw-pt-2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "Workflow organization jigsaw pt 2",
    "text": "Workflow organization jigsaw pt 2\n\nNow, form groups with one student from each workflow\nEach person shares what they found in their workflow\nAs a group, write down 2 traits of a workflow that make it easy and challenging to find things (4 traits total)\nProvide examples for each\nI will randomly call on a group to share"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-notes.html#what-are-the-goals-for-workflow-organization",
    "href": "course-materials/lecture-slides/lecture-day1pm-notes.html#what-are-the-goals-for-workflow-organization",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "What are the goals for workflow organization?",
    "text": "What are the goals for workflow organization?\n\nReproducibility\n\nAnother scientist (including Future You) should be able to repeat your analysis.\n\nMaintainability\n\nYou should be able to jump back in to editing your analysis, even if you haven‚Äôt looked at it in a while\nDOC101 lecture TikTok\n\nCollaboration\n\nYou should be able to share your analysis methods and results with others"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-notes.html#tools-that-help-with-workflow-organization",
    "href": "course-materials/lecture-slides/lecture-day1pm-notes.html#tools-that-help-with-workflow-organization",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "Tools that help with workflow organization",
    "text": "Tools that help with workflow organization\n\nGitHub\n\nVersion control - track your (and your collaborators‚Äô) changes\nIssues - a built-in to-do list directly connected to code and conversations\nBranches and pull requests - work in parallel and merge your work as seamlessly as possible\nGitHub Pages - a website for sharing your analysis with collaborators\n\nFolder organization\n\nIt‚Äôs less important which system you pick than it is to be consistent\nFree up cognitive load!\n\nBrainpower you spent figuring out where to put or find files - reallocated to your actual science\n\nFollow conventions\n\nBy playing nice with others you get to use their tools"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1pm-notes.html#introducing-the-flukeandfeather-workflow-organization-system-tm",
    "href": "course-materials/lecture-slides/lecture-day1pm-notes.html#introducing-the-flukeandfeather-workflow-organization-system-tm",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "Introducing: The FlukeAndFeather Workflow Organization System TM",
    "text": "Introducing: The FlukeAndFeather Workflow Organization System TM\n\nYou have before you a shuffled collection of folders and files\nYou have no context other than their names\nWith a partner, try to:\n\nOrganize the folders and files hierarchically\nBriefly describe what you think the purpose of each folder/file is"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-notes.html",
    "href": "course-materials/lecture-slides/lecture-day1am-notes.html",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "This is a class about workflows and reproducibility\nThe workflow is the fundamental unit of data science\nReproducibility ensures workflows don‚Äôt become dead ends\nThe concepts and skills in this class will keep coming up in future classes and for the rest of your career"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-notes.html#welcome-to-eds-214",
    "href": "course-materials/lecture-slides/lecture-day1am-notes.html#welcome-to-eds-214",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "This is a class about workflows and reproducibility\nThe workflow is the fundamental unit of data science\nReproducibility ensures workflows don‚Äôt become dead ends\nThe concepts and skills in this class will keep coming up in future classes and for the rest of your career"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-notes.html#hi-im-max",
    "href": "course-materials/lecture-slides/lecture-day1am-notes.html#hi-im-max",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "Hi, I‚Äôm Max",
    "text": "Hi, I‚Äôm Max\n\nI started as a computer scientist\nSoftware engineer at Microsoft\nFour years as a field biologist (seabirds, mostly)\nSix years grad school, specializing in data science\n\nGIS at SFSU\nMarine biology at Stanford\n\nMy specialty was biologging - animal-borne sensors for detecting location, behavior, and physiology\nNow my research is about open science, sharing data and code, and the ethics of proprietary data\nBut really what I love is teaching!\nIn addition to the MEDS program, I also teach in the new marine science undergraduate major\nMy favorite part of my job is working with students\n\nI would love it if you set up a meeting with me to tell me about your background, your interests, and your motivations for being here"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-notes.html#what-is-this-class-about",
    "href": "course-materials/lecture-slides/lecture-day1am-notes.html#what-is-this-class-about",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "What is this class about?",
    "text": "What is this class about?\n\nWhat is a workflow?\n\nThink-pair-share activity\nData, code, modeling, communication\nThe final workflow masks a trajectory of exploration and dead ends (Stoudt et al.¬†2021 doi:10.1371/journal.pcbi.1008770)\n\nWhat is reproducibility?\n\nDoes it matter if you‚Äôre not doing academic research?\nDebate activity\nReproducibility is the ability to repeat a workflow and get the same results\nGlobal and local goals\n\n‚Äúreproducibility as a mechanism for local knowledge transfer and collaboration, particularly as regards efficient software reuse‚Äù (Feinberg et al.¬†2020 doi:10.1145/3392840)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-notes.html#how-does-it-work",
    "href": "course-materials/lecture-slides/lecture-day1am-notes.html#how-does-it-work",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "How does it work?",
    "text": "How does it work?\n\nBeginning today, try to reproduce a workflow\nLectures and hands-on activities for:\n\nAutomation\nOrganization\nDocumentation\nScale(ation)\nCollaboration\n\nSpecification-based grading\n\nNo points out of 100\nA rubric of specifications (specs) for your final project\nMeet (or exceed) specs and participate in class - get an A\nFeedback loops are critical (no one-and-done)\nYou‚Äôll see more spec-based grading in other MEDS classes"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day1am-notes.html#testimonial-from-bekah",
    "href": "course-materials/lecture-slides/lecture-day1am-notes.html#testimonial-from-bekah",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "Testimonial from Bekah??",
    "text": "Testimonial from Bekah??\n\nQuestion: where are humpbacks in SF Bay most susceptible to ship strikes?\nProblem: model eats a lot of data with extensive pre-processing and subjective parameters.\n\nTime consuming to iterate and incorporate feedback.\nEasily becomes tangled - verifying results is hard!\n\nSolution: instead of a point-and-click solution in ArcGIS, a well-organized, reproducible workflow in R.\nToday: Bekah is Research Associate with the Center for Coastal Studies in Provincetown, MA. Still doing field work and data analysis to protect whales in coastal waters with high human impacts."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-notes.html",
    "href": "course-materials/lecture-slides/lecture-day2am-notes.html",
    "title": "The Command Line and Remote Servers",
    "section": "",
    "text": "This morning, you‚Äôll learn:\n\nWhy the command line is useful\nHow to issue commands on the command line\nWhy remote servers offer performance benefits\nHow to use the command line to interact with a remote server\n\n\n\n[Column 1] Graphical User Interface (GUI) * Point-and-click - gentler learning curve * Limited customization options * Nearly impossible to automate\n[Column 2] Command Line Interface (CLI) * Highly customizable * Designed to be automated * Text-based - steeper learning curve\nAre the trade-offs worth it? For some scientists, maybe not. But for a data scientist, DEFINITELY.\n\n\n\n[Column 1] Terminal * The program you type commands into * Your megaphone for shouting at the computer\n[Column 2] Shell * A program that passes commands to the operating system * Listens to your megaphone\nYou will often see Terminal and Shell used interchangeably. This can get confusing. It helps to see them in action. Let‚Äôs try it out!\n\n\n\n\nOpen a terminal\n\nMacOS: Terminal\nWindows: GitBash (both a terminal AND a shell)\n\nAsk the shell where you are\n\npwd - print working directory\nls - list files in the current directory\n\nCustomize the command with options\n\nls -l - long listing format\nls -a - show hidden files\nls -la - both!\n\n\n\n\n\nAnimate in the images in lecture-slides/images/day2/command-line\n\n\n\n[Column 1] Navigation & File System\n\npwd - know where you are\nls (with -l, -a flags) - see what‚Äôs there\ncd - move around (including cd ~, cd .., cd -)\nmkdir - create directories\nrmdir - remove directories (only if empty)\n\n[Column 2] File Operations\n\ntouch - create files\ncp - copy files/directories\nmv - move/rename files\nrm - delete files (no recycle bin!)\ncat - view file contents\n\n\n\n\n[Column 1] Navigation & File System\n\npwd - know where you are\nls (with -l, -a flags) - see what‚Äôs there\ncd - move around (including cd ~, cd .., cd -)\nmkdir - create directories\nrmdir - remove directories (only if empty)\n\n[Column 2] File Operations\n\ntouch - create files\ncp - copy files/directories\nmv - move/rename files\nrm - delete files (no recycle bin!)\ncat - view file contents\n\n\n\n\ncommand [options] [arguments] * command - the command you want to run (e.g., ls) * options - flags that modify the command‚Äôs behavior (e.g., -l, -a) * arguments - the files or directories the command should operate on (e.g., mydir/)\n\n\n\nDo the following in your terminal. Make a note of your answers in a text file.\n[Column 1]\nCreate the following directory structure on your computer.\nrenewable-energy ‚îú‚îÄ‚îÄ capacity ‚îÇ ‚îú‚îÄ‚îÄ san-luis-obispo.csv ‚îÇ ‚îú‚îÄ‚îÄ santa-barbara.csv ‚îÇ ‚îî‚îÄ‚îÄ ventura.csv ‚îî‚îÄ‚îÄ usage ‚îú‚îÄ‚îÄ san-luis-obispo.csv ‚îú‚îÄ‚îÄ santa-barbara.csv ‚îî‚îÄ‚îÄ ventura.csv\n[Column 2]\nNow, delete the capacity/ folder and rename usage/ to data/.\nUse ls -l data to check the contents of your directory. Answer the following questions.\n\nDoes your directory look the way you expect it to?\nIn ls -l data, what parts correspond to the argument, option, and command?\n\n\n\n\nDo the following in your terminal. Make a note of your answers in a text file.\n[Column 1]\nCreate the following directory structure on your computer.\nrenewable-energy ‚îú‚îÄ‚îÄ capacity ‚îÇ ‚îú‚îÄ‚îÄ san-luis-obispo.csv ‚îÇ ‚îú‚îÄ‚îÄ santa-barbara.csv ‚îÇ ‚îî‚îÄ‚îÄ ventura.csv ‚îî‚îÄ‚îÄ usage ‚îú‚îÄ‚îÄ san-luis-obispo.csv ‚îú‚îÄ‚îÄ santa-barbara.csv ‚îî‚îÄ‚îÄ ventura.csv\n[Column 2]\nNow, delete the capacity/ folder and rename usage/ to data/.\nUse ls -l data to check the contents of your directory. Answer the following questions.\n\nDoes your directory look the way you expect it to?\nIn ls -l data, what parts correspond to the argument, option, and command?\n\n\n\n\n[Column 1]\nFrom the renewable-energy directory, run the following commands:\ncd data\nmkdir ../scripts\ntouch ../scripts/1_import.R\ncd ..\nmv scripts/1_import.R R/import.R\n[Column 2]\nAnswer the following questions.\n\nWhat error message did you get?\nWhat do you think these commands were supposed to accomplish?\nHow could you fix it?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-notes.html#why-not-a-gui",
    "href": "course-materials/lecture-slides/lecture-day2am-notes.html#why-not-a-gui",
    "title": "The Command Line and Remote Servers",
    "section": "",
    "text": "[Column 1] Graphical User Interface (GUI) * Point-and-click - gentler learning curve * Limited customization options * Nearly impossible to automate\n[Column 2] Command Line Interface (CLI) * Highly customizable * Designed to be automated * Text-based - steeper learning curve\nAre the trade-offs worth it? For some scientists, maybe not. But for a data scientist, DEFINITELY."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-notes.html#terminals-and-shells",
    "href": "course-materials/lecture-slides/lecture-day2am-notes.html#terminals-and-shells",
    "title": "The Command Line and Remote Servers",
    "section": "",
    "text": "[Column 1] Terminal * The program you type commands into * Your megaphone for shouting at the computer\n[Column 2] Shell * A program that passes commands to the operating system * Listens to your megaphone\nYou will often see Terminal and Shell used interchangeably. This can get confusing. It helps to see them in action. Let‚Äôs try it out!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-notes.html#terminal-and-shell-demo",
    "href": "course-materials/lecture-slides/lecture-day2am-notes.html#terminal-and-shell-demo",
    "title": "The Command Line and Remote Servers",
    "section": "",
    "text": "Open a terminal\n\nMacOS: Terminal\nWindows: GitBash (both a terminal AND a shell)\n\nAsk the shell where you are\n\npwd - print working directory\nls - list files in the current directory\n\nCustomize the command with options\n\nls -l - long listing format\nls -a - show hidden files\nls -la - both!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-notes.html#onions-have-layers",
    "href": "course-materials/lecture-slides/lecture-day2am-notes.html#onions-have-layers",
    "title": "The Command Line and Remote Servers",
    "section": "",
    "text": "Animate in the images in lecture-slides/images/day2/command-line"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-notes.html#key-shell-commands",
    "href": "course-materials/lecture-slides/lecture-day2am-notes.html#key-shell-commands",
    "title": "The Command Line and Remote Servers",
    "section": "",
    "text": "[Column 1] Navigation & File System\n\npwd - know where you are\nls (with -l, -a flags) - see what‚Äôs there\ncd - move around (including cd ~, cd .., cd -)\nmkdir - create directories\nrmdir - remove directories (only if empty)\n\n[Column 2] File Operations\n\ntouch - create files\ncp - copy files/directories\nmv - move/rename files\nrm - delete files (no recycle bin!)\ncat - view file contents"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-notes.html#key-shell-commands-1",
    "href": "course-materials/lecture-slides/lecture-day2am-notes.html#key-shell-commands-1",
    "title": "The Command Line and Remote Servers",
    "section": "",
    "text": "[Column 1] Navigation & File System\n\npwd - know where you are\nls (with -l, -a flags) - see what‚Äôs there\ncd - move around (including cd ~, cd .., cd -)\nmkdir - create directories\nrmdir - remove directories (only if empty)\n\n[Column 2] File Operations\n\ntouch - create files\ncp - copy files/directories\nmv - move/rename files\nrm - delete files (no recycle bin!)\ncat - view file contents"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-notes.html#customizing-commands",
    "href": "course-materials/lecture-slides/lecture-day2am-notes.html#customizing-commands",
    "title": "The Command Line and Remote Servers",
    "section": "",
    "text": "command [options] [arguments] * command - the command you want to run (e.g., ls) * options - flags that modify the command‚Äôs behavior (e.g., -l, -a) * arguments - the files or directories the command should operate on (e.g., mydir/)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-notes.html#shell-command-challenge-part-1",
    "href": "course-materials/lecture-slides/lecture-day2am-notes.html#shell-command-challenge-part-1",
    "title": "The Command Line and Remote Servers",
    "section": "",
    "text": "Do the following in your terminal. Make a note of your answers in a text file.\n[Column 1]\nCreate the following directory structure on your computer.\nrenewable-energy ‚îú‚îÄ‚îÄ capacity ‚îÇ ‚îú‚îÄ‚îÄ san-luis-obispo.csv ‚îÇ ‚îú‚îÄ‚îÄ santa-barbara.csv ‚îÇ ‚îî‚îÄ‚îÄ ventura.csv ‚îî‚îÄ‚îÄ usage ‚îú‚îÄ‚îÄ san-luis-obispo.csv ‚îú‚îÄ‚îÄ santa-barbara.csv ‚îî‚îÄ‚îÄ ventura.csv\n[Column 2]\nNow, delete the capacity/ folder and rename usage/ to data/.\nUse ls -l data to check the contents of your directory. Answer the following questions.\n\nDoes your directory look the way you expect it to?\nIn ls -l data, what parts correspond to the argument, option, and command?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-notes.html#shell-command-challenge-part-1-1",
    "href": "course-materials/lecture-slides/lecture-day2am-notes.html#shell-command-challenge-part-1-1",
    "title": "The Command Line and Remote Servers",
    "section": "",
    "text": "Do the following in your terminal. Make a note of your answers in a text file.\n[Column 1]\nCreate the following directory structure on your computer.\nrenewable-energy ‚îú‚îÄ‚îÄ capacity ‚îÇ ‚îú‚îÄ‚îÄ san-luis-obispo.csv ‚îÇ ‚îú‚îÄ‚îÄ santa-barbara.csv ‚îÇ ‚îî‚îÄ‚îÄ ventura.csv ‚îî‚îÄ‚îÄ usage ‚îú‚îÄ‚îÄ san-luis-obispo.csv ‚îú‚îÄ‚îÄ santa-barbara.csv ‚îî‚îÄ‚îÄ ventura.csv\n[Column 2]\nNow, delete the capacity/ folder and rename usage/ to data/.\nUse ls -l data to check the contents of your directory. Answer the following questions.\n\nDoes your directory look the way you expect it to?\nIn ls -l data, what parts correspond to the argument, option, and command?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-notes.html#shell-command-challenge-part-2",
    "href": "course-materials/lecture-slides/lecture-day2am-notes.html#shell-command-challenge-part-2",
    "title": "The Command Line and Remote Servers",
    "section": "",
    "text": "[Column 1]\nFrom the renewable-energy directory, run the following commands:\ncd data\nmkdir ../scripts\ntouch ../scripts/1_import.R\ncd ..\nmv scripts/1_import.R R/import.R\n[Column 2]\nAnswer the following questions.\n\nWhat error message did you get?\nWhat do you think these commands were supposed to accomplish?\nHow could you fix it?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-notes.html",
    "href": "course-materials/lecture-slides/lecture-day3am-notes.html",
    "title": "Version control with git",
    "section": "",
    "text": "You‚Äôve been using git for version control for three weeks. During that time you learned how to:\n\nCreate a repository\nCommit files to a local repository\nPush files to a remote repository\n\nThese are essential commands for using git solo. But what if you want to work with others?\n\n\n\nThese are the three essential commands for using git and GitHub solo.\nLet‚Äôs review these commands by visualizing a commit history.\n[Unlabeled diagram]\n[Labeled diagram]\n\n\n\nAs our work becomes more complex, creating branches becomes essential.\n[Branching diagrams]\nWhy do we create branches?\n\n\n\nThis commit history permits a merge conflict. Why?\n[Conflict diagram]\n\n\n\nMerge conflicts are best resolved manually. Your judgement is essential!\nThey look like this:\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\ntwo &lt;- 1 + 1  # This is the current branch's code\n=======\nfoo &lt;- 1 + 1  # This is the incoming branch's code\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; d670460b5b4ae3ea915caf5c68d12f560a9fe3e4\nNotice that two of those lines look like R code, the other three look weird.\n\n\n\nResolve the conflict by removing the weird lines and choosing the appropriate R code.\nGit views both of these solutions as valid. Which one would you choose?\n[column 1]\ntwo &lt;- 1 + 1\n[column 2]\nfoo &lt;- 1 + 1\n\n\n\nYou‚Äôre almost done resolving the conflict.\nAfter choosing which code to keep, you have to let git know you‚Äôre done.\ngit commit -m \"Resolved merge conflict\"\nIn RStudio, would you run this command at the Console or the Terminal? How do you know?\n\n\n\nBranches are essential for collaborative work.\n\nWork on changes in parallel\nKeep the main branch stable while experimenting\n\nMerges reunite disparate branches, but they can create conflicts\n\nConflicts look scary, but you can resolve them!\nManually choose the code you want to keep using your judgement\n\n\n\n\nThis commit history reflects many different git operations. Label the following operations in the diagram below.\nclone, commit, push, pull, branch, merge\n[git history diagram 1]\n\n\n\nWhich commit history below could yield a merge conflict? Why?\n[git history diagram 2]"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-notes.html#recap",
    "href": "course-materials/lecture-slides/lecture-day3am-notes.html#recap",
    "title": "Version control with git",
    "section": "",
    "text": "You‚Äôve been using git for version control for three weeks. During that time you learned how to:\n\nCreate a repository\nCommit files to a local repository\nPush files to a remote repository\n\nThese are essential commands for using git solo. But what if you want to work with others?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-notes.html#clone-commit-push",
    "href": "course-materials/lecture-slides/lecture-day3am-notes.html#clone-commit-push",
    "title": "Version control with git",
    "section": "",
    "text": "These are the three essential commands for using git and GitHub solo.\nLet‚Äôs review these commands by visualizing a commit history.\n[Unlabeled diagram]\n[Labeled diagram]"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-notes.html#branches-merges",
    "href": "course-materials/lecture-slides/lecture-day3am-notes.html#branches-merges",
    "title": "Version control with git",
    "section": "",
    "text": "As our work becomes more complex, creating branches becomes essential.\n[Branching diagrams]\nWhy do we create branches?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-notes.html#conflicts",
    "href": "course-materials/lecture-slides/lecture-day3am-notes.html#conflicts",
    "title": "Version control with git",
    "section": "",
    "text": "This commit history permits a merge conflict. Why?\n[Conflict diagram]"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-notes.html#resolving-conflicts-pt-1",
    "href": "course-materials/lecture-slides/lecture-day3am-notes.html#resolving-conflicts-pt-1",
    "title": "Version control with git",
    "section": "",
    "text": "Merge conflicts are best resolved manually. Your judgement is essential!\nThey look like this:\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\ntwo &lt;- 1 + 1  # This is the current branch's code\n=======\nfoo &lt;- 1 + 1  # This is the incoming branch's code\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; d670460b5b4ae3ea915caf5c68d12f560a9fe3e4\nNotice that two of those lines look like R code, the other three look weird."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-notes.html#resolving-conflicts-pt-2",
    "href": "course-materials/lecture-slides/lecture-day3am-notes.html#resolving-conflicts-pt-2",
    "title": "Version control with git",
    "section": "",
    "text": "Resolve the conflict by removing the weird lines and choosing the appropriate R code.\nGit views both of these solutions as valid. Which one would you choose?\n[column 1]\ntwo &lt;- 1 + 1\n[column 2]\nfoo &lt;- 1 + 1"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-notes.html#resolving-conflicts-pt-3",
    "href": "course-materials/lecture-slides/lecture-day3am-notes.html#resolving-conflicts-pt-3",
    "title": "Version control with git",
    "section": "",
    "text": "You‚Äôre almost done resolving the conflict.\nAfter choosing which code to keep, you have to let git know you‚Äôre done.\ngit commit -m \"Resolved merge conflict\"\nIn RStudio, would you run this command at the Console or the Terminal? How do you know?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-notes.html#branches-and-merges-recap",
    "href": "course-materials/lecture-slides/lecture-day3am-notes.html#branches-and-merges-recap",
    "title": "Version control with git",
    "section": "",
    "text": "Branches are essential for collaborative work.\n\nWork on changes in parallel\nKeep the main branch stable while experimenting\n\nMerges reunite disparate branches, but they can create conflicts\n\nConflicts look scary, but you can resolve them!\nManually choose the code you want to keep using your judgement"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-notes.html#review-pt-1",
    "href": "course-materials/lecture-slides/lecture-day3am-notes.html#review-pt-1",
    "title": "Version control with git",
    "section": "",
    "text": "This commit history reflects many different git operations. Label the following operations in the diagram below.\nclone, commit, push, pull, branch, merge\n[git history diagram 1]"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-notes.html#review-pt-2",
    "href": "course-materials/lecture-slides/lecture-day3am-notes.html#review-pt-2",
    "title": "Version control with git",
    "section": "",
    "text": "Which commit history below could yield a merge conflict? Why?\n[git history diagram 2]"
  },
  {
    "objectID": "course-materials/day2.html",
    "href": "course-materials/day2.html",
    "title": "Command Line and Documentation",
    "section": "",
    "text": "Session\n Lecture slides\n Interactive session\n Reflection\n\n\n\n\nMorning\nCommand line and remote server\nNavigate the server\nServer vs local\n\n\nAfternoon\nDocumentation\nREADMEs, style, and comments\nCourse support"
  },
  {
    "objectID": "course-materials/day2.html#class-materials",
    "href": "course-materials/day2.html#class-materials",
    "title": "Command Line and Documentation",
    "section": "",
    "text": "Session\n Lecture slides\n Interactive session\n Reflection\n\n\n\n\nMorning\nCommand line and remote server\nNavigate the server\nServer vs local\n\n\nAfternoon\nDocumentation\nREADMEs, style, and comments\nCourse support"
  },
  {
    "objectID": "course-materials/day2.html#further-reading",
    "href": "course-materials/day2.html#further-reading",
    "title": "Command Line and Documentation",
    "section": "Further reading",
    "text": "Further reading\n\nMarwick, Boettiger, and Mullen (2018) describe a system for creating a research compendium (a single archive of data, code, results, and manuscript) using R. They provide multiple examples of how to document code and data.\nSalmon (2023) digs deeper into what does (and doesn‚Äôt) make for a good comment."
  },
  {
    "objectID": "course-materials/day4.html",
    "href": "course-materials/day4.html",
    "title": "Final project self-assessment and peer feedback",
    "section": "",
    "text": "No lectures today! All interactive sessions.\n\n\n\n Session\n Interactive session\n Interactive session\n Reflection\n\n\n\n\nMorning\nDraft Quarto analysis\nSelf assessment\nMorning reflection\n\n\nAfternoon\nPeer feedback and contribution\nOpen working time\nAfternoon reflection"
  },
  {
    "objectID": "course-materials/day4.html#class-materials",
    "href": "course-materials/day4.html#class-materials",
    "title": "Final project self-assessment and peer feedback",
    "section": "",
    "text": "No lectures today! All interactive sessions.\n\n\n\n Session\n Interactive session\n Interactive session\n Reflection\n\n\n\n\nMorning\nDraft Quarto analysis\nSelf assessment\nMorning reflection\n\n\nAfternoon\nPeer feedback and contribution\nOpen working time\nAfternoon reflection"
  },
  {
    "objectID": "course-materials/final-project/final-project-peer-review.html",
    "href": "course-materials/final-project/final-project-peer-review.html",
    "title": "Final Project Peer Feedback and Contribution",
    "section": "",
    "text": "In this session, you‚Äôre going to review a peer‚Äôs work, provide them with constructive feedback, and make a contribution to their project.\nPeer review is important to develop collaboration skills. It also lets you see how data scientists can come up with different solutions to the same problem. As you perform your peer review, keep two goals in mind: be thorough and be constructive.\nBeing thorough means reviewing your peer‚Äôs work with a fine-toothed comb. If they have an error or an omission in their repo, I want you to do your best to find it before I do!\nAt the same time, be constructive. Good peer review is a gift - an opportunity to lift each other up. Respectfully draw your peer‚Äôs attention to where and how they can improve their work.\n\n\n\nFocus on the code, not the person. E.g., ‚ÄúI think this comment needs more explanation‚Äù instead of ‚ÄúYou didn‚Äôt explain this well enough‚Äù.\nTry to explain why, not just what. E.g., ‚ÄúIf you change this variable from nutrientMgL to nutrient_mg_l then your variable naming will be more consistent‚Äù instead of ‚ÄúMake this nutrient_mg_l‚Äù.\nAcknowledge good work! Highlight parts of the code where your peer has successfully met specs."
  },
  {
    "objectID": "course-materials/final-project/final-project-peer-review.html#goal",
    "href": "course-materials/final-project/final-project-peer-review.html#goal",
    "title": "Final Project Peer Feedback and Contribution",
    "section": "",
    "text": "In this session, you‚Äôre going to review a peer‚Äôs work, provide them with constructive feedback, and make a contribution to their project.\nPeer review is important to develop collaboration skills. It also lets you see how data scientists can come up with different solutions to the same problem. As you perform your peer review, keep two goals in mind: be thorough and be constructive.\nBeing thorough means reviewing your peer‚Äôs work with a fine-toothed comb. If they have an error or an omission in their repo, I want you to do your best to find it before I do!\nAt the same time, be constructive. Good peer review is a gift - an opportunity to lift each other up. Respectfully draw your peer‚Äôs attention to where and how they can improve their work.\n\n\n\nFocus on the code, not the person. E.g., ‚ÄúI think this comment needs more explanation‚Äù instead of ‚ÄúYou didn‚Äôt explain this well enough‚Äù.\nTry to explain why, not just what. E.g., ‚ÄúIf you change this variable from nutrientMgL to nutrient_mg_l then your variable naming will be more consistent‚Äù instead of ‚ÄúMake this nutrient_mg_l‚Äù.\nAcknowledge good work! Highlight parts of the code where your peer has successfully met specs."
  },
  {
    "objectID": "course-materials/final-project/final-project-peer-review.html#instructions",
    "href": "course-materials/final-project/final-project-peer-review.html#instructions",
    "title": "Final Project Peer Feedback and Contribution",
    "section": "Instructions",
    "text": "Instructions\n\nPeer feedback\n\nCreate a peer review conga line. Everyone should give and receive feedback from different students.\nFork the repo of the student you‚Äôre giving feedback to. Clone it on your computer.\nCreate a markdown file in your forked repo called peer-assessment.md.\nAs with the self assessment, create one header for each category of specs (except Collaboration) and a subheader for each individual spec.\nFor each spec, assess your peer‚Äôs work as Not yet or Meets spec. In one to two sentences, explain your assessment.\n\nFor each spec you assess as Not yet, open an Issue on your peer‚Äôs GitHub repo describing what you think they could do to meet the spec.\nIf you think every spec has been met, open an Issue describing what you think they could do to Exceed an eligible spec.\n\nCommit your changes and push to GitHub.\nOpen a pull request. Tag my username (@FlukeAndFeather) in the description of the pull request so I get a notification about it.\nWhen you receive your reviewer‚Äôs pull request, read their feedback and merge it.\n\n\n\nPeer contribution\nThis will be very similar to the last part, but instead of opening issues you‚Äôre going to be closing them by making contributions. Contributions can be code, but they can also be documentation or organization.\n\nCreate a peer contribution conga line. Everyone should give and receive contributions from different students.\nFork the repo of the student you‚Äôre contributing to. Clone it on your computer.\nChoose an Issue in their repo you can contribute to.\nLet‚Äôs say you chose an Issue about documenting a function.\nRespond to the Issue with a plan for how you‚Äôll contribute.\nYou could describe the function‚Äôs parameters, return value, and internal logic.\nMake changes in your local repo. Commit and push.\nAdd comments to the function providing proper documentation.\nOpen a Pull request on GitHub.\nWhen you receive the Pull request from your contributor, review their changes. This can be a conversation! If appropriate, reply with revisions you‚Äôd like to see. Otherwise, merge the Pull request."
  },
  {
    "objectID": "course-materials/final-project/final-project-peer-review.html#recap",
    "href": "course-materials/final-project/final-project-peer-review.html#recap",
    "title": "Final Project Peer Feedback and Contribution",
    "section": "Recap",
    "text": "Recap\nIn this session, you performed two important workflow collaboration tasks.\nFirst, you provided feedback to one of your peers on their work. Today, you had a rubric of specs to work from. In the future, it‚Äôll be up to you consider what the specs for the work should be!\nSecond, you made a contribution to one of your peer‚Äôs projects using Fork/Pull request. This is the preferred method for contributing to distributed projects on GitHub because it allows data scientists to work in parallel, and makes it easier to review and merge changes by multiple authors. We recommend you use Fork/Pull request for your Capstone projects."
  },
  {
    "objectID": "course-materials/final-project/final-project-submission.html",
    "href": "course-materials/final-project/final-project-submission.html",
    "title": "Final Project Submission",
    "section": "",
    "text": "This is it! What you‚Äôve worked towards this whole week. You‚Äôve learned how to create a reproducible analysis in an organized workflow. Your initial draft has gone through both self assessment and peer review. Now it‚Äôs time for your instructor to see your progress and provide feedback."
  },
  {
    "objectID": "course-materials/final-project/final-project-submission.html#goal",
    "href": "course-materials/final-project/final-project-submission.html#goal",
    "title": "Final Project Submission",
    "section": "",
    "text": "This is it! What you‚Äôve worked towards this whole week. You‚Äôve learned how to create a reproducible analysis in an organized workflow. Your initial draft has gone through both self assessment and peer review. Now it‚Äôs time for your instructor to see your progress and provide feedback."
  },
  {
    "objectID": "course-materials/final-project/final-project-submission.html#instructions",
    "href": "course-materials/final-project/final-project-submission.html#instructions",
    "title": "Final Project Submission",
    "section": "Instructions",
    "text": "Instructions\n\nCreate a markdown file in your project repo called instructor-feedback.md.\n(Optional) If you would like your instructor to assess two specs for Exceeds spec:\n\nCreate a header called ‚ÄúExceeds spec‚Äù\nCreate two subheaders, one for each spec. (Remember, only some specs are eligible for Exceeds spec!)\nIn 1-2 sentences, describe how your work for that spec is of professional quality. Note: you will get feedback about this and have an opportunity to make revisions. This is the start of a conversation, not a one-and-done attempt.\n\nCreate a header called ‚ÄúCollaboration‚Äù\n\nIn 3-4 sentences, describe how your participation in peer feedback went. Give examples for how you were thorough and constructive.\nProvide links to 3 closed issues that resulted from the self assessment and/or peer review.\nProvide a link to the commit on GitHub where you resolved a merge conflict."
  },
  {
    "objectID": "course-materials/interactive/interactive-day1am.html",
    "href": "course-materials/interactive/interactive-day1am.html",
    "title": "Plan an Analysis",
    "section": "",
    "text": "What happens to water quality after a hurricane hits? Schaefer et al. (2000) investigated long-term stream water quality in Puerto Rico before and after the 1989 Hurricane Hugo. They found that some nutrients, like potassium, increased greatly post-disturbance and stayed elevated for years afterwards."
  },
  {
    "objectID": "course-materials/interactive/interactive-day1am.html#background",
    "href": "course-materials/interactive/interactive-day1am.html#background",
    "title": "Plan an Analysis",
    "section": "",
    "text": "What happens to water quality after a hurricane hits? Schaefer et al. (2000) investigated long-term stream water quality in Puerto Rico before and after the 1989 Hurricane Hugo. They found that some nutrients, like potassium, increased greatly post-disturbance and stayed elevated for years afterwards."
  },
  {
    "objectID": "course-materials/interactive/interactive-day1am.html#goals",
    "href": "course-materials/interactive/interactive-day1am.html#goals",
    "title": "Plan an Analysis",
    "section": "Goals",
    "text": "Goals\nOver the course of this week, you‚Äôre going to reproduce figure 3 from Schaefer et al. (2000). Your goal for today is to gather the data, make an analysis plan, and write the code to process and visualize the data. By the end of the week, you will organize your analysis and document your workflow. Even better, you‚Äôll do it collaboratively and prepare it to run on a high-performance cluster.\n\n\n\n\n\n\nFigure¬†1: Concentrations in Bisley, Puerto Rico streams before and after Hurricane Hugo, 9-wk moving averags. (a) potassium, (b) nitrate-N, (c) magnesium, (d) calcium and (e) ammonium-N. The vertical lines mark the time of hurricane disturbance. Reproduced from Schaefer et al.¬†(2000)."
  },
  {
    "objectID": "course-materials/interactive/interactive-day1am.html#data",
    "href": "course-materials/interactive/interactive-day1am.html#data",
    "title": "Plan an Analysis",
    "section": "Data",
    "text": "Data\nThe data are available through the Environmental Data Initiative. You can find them here: (McDowell and International Institute Of Tropical Forestry (IITF) 2024)."
  },
  {
    "objectID": "course-materials/interactive/interactive-day1am.html#instructions",
    "href": "course-materials/interactive/interactive-day1am.html#instructions",
    "title": "Plan an Analysis",
    "section": "Instructions",
    "text": "Instructions\n\nSetup\n\nCreate a new RStudio project.\nCreate a GitHub repo.\nDownload the data from McDowell and International Institute Of Tropical Forestry (IITF) (2024) and put it in your project folder.\nMake an initial commit and push to GitHub.\n\n\n\nExplore\n\nExamine figure 3 of Schaefer et al. (2000) and the data available at McDowell and International Institute Of Tropical Forestry (IITF) (2024).\nMake a list of the data files and the columns within them that you think you‚Äôll need to reproduce figure 3.\n\n\n\n\n\n\n\nTip\n\n\n\nCheck the metadata in McDowell and International Institute Of Tropical Forestry (IITF) (2024) carefully. Are the names and units what you expect? It‚Äôs been 25 years since Schaefer et al. (2000) was published - a lot can change in that time!\n\n\n\n\n\n\n\n\nTip\n\n\n\nIt may be helpful to read a CSV file into R and explore it using numeric or visual summaries.\n\n\n\n\nPlan\n\nBased on the caption of figure 3, write down the steps you think will be necessary to reproduce figure 3.\nCreate a flow chart of how the steps fit together. Things to consider include:\n\nHow will you get the data into R?\nHow will you clean up the data?\nAre any processing or modeling steps required?\nWhat are your outputs?\n\n\n\n\nShare\n\nFind a partner.\nCompare your flowcharts.\nFind two similarities and two differences between your flowcharts and make note of them. To get you started, try considering:\n\nWhere did you include more or less detail?\nHow did you visually represent components and connections?\n\n\nI will call on two pairs to share."
  },
  {
    "objectID": "course-materials/interactive/interactive-day2am.html",
    "href": "course-materials/interactive/interactive-day2am.html",
    "title": "Navigate the Server",
    "section": "",
    "text": "Let‚Äôs get started working on a remote server! Working on a remote server is one of the payoffs for the learning curve going from the GUI to the CLI.\nCompared to your personal computer, remote servers can be beefy. They let you scale your analysis up to bigger datasets and more computationally intensive algorithms. Some of the advantages of using remote servers for data science are:\n\nPower More CPUs/Cores, more RAM\nCapacity More disk space and generally faster storage\nSecurity Data are spread across multiple drives and have nightly backups\nCollaboration Shared folders for code, data, and other materials; same software versions"
  },
  {
    "objectID": "course-materials/interactive/interactive-day2am.html#background",
    "href": "course-materials/interactive/interactive-day2am.html#background",
    "title": "Navigate the Server",
    "section": "",
    "text": "Let‚Äôs get started working on a remote server! Working on a remote server is one of the payoffs for the learning curve going from the GUI to the CLI.\nCompared to your personal computer, remote servers can be beefy. They let you scale your analysis up to bigger datasets and more computationally intensive algorithms. Some of the advantages of using remote servers for data science are:\n\nPower More CPUs/Cores, more RAM\nCapacity More disk space and generally faster storage\nSecurity Data are spread across multiple drives and have nightly backups\nCollaboration Shared folders for code, data, and other materials; same software versions"
  },
  {
    "objectID": "course-materials/interactive/interactive-day2am.html#goals",
    "href": "course-materials/interactive/interactive-day2am.html#goals",
    "title": "Navigate the Server",
    "section": "Goals",
    "text": "Goals\nIn this session you‚Äôre going to use the CLI and RStudio Workbench on the remote server. Along the way, you‚Äôll learn how to:\n\nConnect to Workbench with the CLI\nConfigure git and GitHub remotely\nInteract with the server version of RStudio\n\nYou‚Äôre also going to create your first merge conflict - an inevitable challenge in coding collaborations. Tomorrow, you‚Äôll learn how to resolve the conflict."
  },
  {
    "objectID": "course-materials/interactive/interactive-day2am.html#instructions",
    "href": "course-materials/interactive/interactive-day2am.html#instructions",
    "title": "Navigate the Server",
    "section": "Instructions",
    "text": "Instructions\n\nConnect to Workbench with the CLI1\n\nConnect to campus VPN.\nOpen up Terminal (mac) or GitBash (windows)\nRun the following command: ssh {username}@workbench-1.bren.ucsb.edu\nType in your Bren password\nYou‚Äôll know if you connected successfully if the last line says {username}@workbench-1 like the picture below.\n\n\n\n\nConfigure git2\nConfigure your git user name and email.\ngit config --global user.name \"Jane Doe\"\ngit config --global user.email janedoe@example.com\nTell git to hold on to your GitHub Personal Access Token between connections.\ngit config --global credential.helper 'cache --timeout=10000000'\nCheck that your configuration looks right.\ngit config --list --global\n\n\nCheckpoint 1\nNow that you‚Äôve connected to Workbench with the CLI and configured git, answer the following questions.\nQ1: What directory are you in?\nQ2: Are there any files in your directory?\nQ3: There‚Äôs a folder in Workbench‚Äôs root called courses. How would you look at the contents of that folder?\n\n\nConnect to Workbench with the RStudio GUI\n\nOpen your browser and navigate to https://workbench-1.bren.ucsb.edu.\nLog in with Bren credentials.\nStart an RStudio session by selecting ‚ÄúNew Session‚Äù. It may take a few seconds to start.\n\nYou should now see RStudio in your browser as below.\n\n\n\nConfigure GitHub\n\nReturn to the Workbench RStudio interface.\nIn the console, run install.packages(\"usethis\").\nThen, run usethis::create_github_token().\nThe GitHub PAT dialog will appear in your browser. This should be familiar, you‚Äôve done this before on your computer.\nCreate your PAT and set your GitHub credentials on Workbench by running gitcreds::gitcreds_set().\nRun usethis::git_sitrep() and verify your git and GitHub configurations are complete.\n\n\n\nClone your repo\n\nNavigate to your EDS 214 project repo on GitHub. Copy the URL.\nReturn to the Workbench RStudio interface. Create a new RStudio project from your GitHub repo.\n\n\n\nCheckpoint 2\nSwitch to the terminal you used to connect to Workbench with the CLI. Verify your repo‚Äôs files are now in your home directory.\n\n\nCreate a merge conflict\nMerge conflicts occur when the same line of code in a repository has been edited in two different places. One way to generate a merge conflict is when you‚Äôre editing the same repo from two places (e.g., your personal computer and the remote server). Another way is when two people are working on the same code base simultaneously. Both of these are likely to happen during your capstone!\nMerge conflicts look scary, but they are a necessary phenomenon in data science. Today you‚Äôll create a conflict, tomorrow you‚Äôll fix it.\n\nEdit a line on the remote server\n\nChoose a line in your spaghetti code that you wrote yesterday and edit it. You can change the name of a variable, for example.\nCommit your change using the Git pane.\nPush the change to GitHub.\n\n\n\nEdit the same line locally\n\nOpen your EDS 214 project in RStudio locally (not on Workbench). Find the same line of code and edit it in a different way. If you changed a variable name on the remote server, for example, change it to something else.\nCommit your change.\nPush.\n\n\n\nUh oh!\nWhen you push the second time, you‚Äôll see an error like the one below.\nTo https://github.com/[username]/[repo]\n ! [rejected]        HEAD -&gt; main (fetch first)\nerror: failed to push some refs to 'https://github.com/[username]/[repo]'\nhint: Updates were rejected because the remote contains work that you do not\nhint: have locally. This is usually caused by another repository pushing to\nhint: the same ref. If you want to integrate the remote changes, use\nhint: 'git pull' before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\nThis is a good error! It prevents you from accidentally overwriting your own or your collaborator‚Äôs work. Git calls this a merge conflict, and we‚Äôll cover how to fix them tomorrow."
  },
  {
    "objectID": "course-materials/interactive/interactive-day2am.html#recap",
    "href": "course-materials/interactive/interactive-day2am.html#recap",
    "title": "Navigate the Server",
    "section": "Recap",
    "text": "Recap\nThe Workbench remote server grants you access to greater computational resources and is a platform for collaboration that you‚Äôll use extensively in your capstone. Today, you learned how to:\n\nUse ssh to connect to Workbench (the CLI)\nConfigure git and GitHub so you can keep getting the benefits of version control\nUse RStudio on the server directly through your browser"
  },
  {
    "objectID": "course-materials/interactive/interactive-day2am.html#footnotes",
    "href": "course-materials/interactive/interactive-day2am.html#footnotes",
    "title": "Navigate the Server",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThese instructions are also available on the MEDS Computational Server Guide‚Ü©Ô∏é\nThese instructions are also available in the MEDS Software Installation Guide‚Ü©Ô∏é"
  },
  {
    "objectID": "course-materials/interactive/interactive-day3am.html",
    "href": "course-materials/interactive/interactive-day3am.html",
    "title": "Git Branching",
    "section": "",
    "text": "Branching is a version control feature essential for collaboration and developing complex analyses. It allows multiple collaborators to work in parallel (or one data scientist working on multiple features) without interfering with each other. But as great as branches are, they do come with a learning curve, especially when it comes to the dreaded merge conflict1."
  },
  {
    "objectID": "course-materials/interactive/interactive-day3am.html#background",
    "href": "course-materials/interactive/interactive-day3am.html#background",
    "title": "Git Branching",
    "section": "",
    "text": "Branching is a version control feature essential for collaboration and developing complex analyses. It allows multiple collaborators to work in parallel (or one data scientist working on multiple features) without interfering with each other. But as great as branches are, they do come with a learning curve, especially when it comes to the dreaded merge conflict1."
  },
  {
    "objectID": "course-materials/interactive/interactive-day3am.html#goals",
    "href": "course-materials/interactive/interactive-day3am.html#goals",
    "title": "Git Branching",
    "section": "Goals",
    "text": "Goals\nIn this session, you‚Äôre going to practice branching, merging, and resolving merge conflicts. By the of the session, you will be able to resolve the merge conflict you created yesterday."
  },
  {
    "objectID": "course-materials/interactive/interactive-day3am.html#instructions",
    "href": "course-materials/interactive/interactive-day3am.html#instructions",
    "title": "Git Branching",
    "section": "Instructions",
    "text": "Instructions\n\nLearn Git Branching\nLearn Git Branching is an interactive tutorial for learning git commands. Complete lessons 1-3:\n\nIntroduction to Git Commits\nBranching in Git\nMerging in Git\n\n\n\nCreate and resolve a merge conflict\nWe‚Äôre going to do this almost entirely at the command line, to give you more practice with shell commands and the git CLI.\n\n\n\n\n\n\nNote\n\n\n\nEssential git CLI commands\ngit init [repo name] Create a repository\ngit add [file] Stage a file for commit\ngit commit -m \"[message]\" Commit changes with a message\ngit branch [branch name] Create a new branch from the current commit\ngit switch [branch name] Switch to another branch\ngit status Summarize status of repo, including uncommitted changes and the current branch\n\n\n\n\n\n\n\n\nNote\n\n\n\nEssential shell commands\npwd Print working directory\nls List files\ncd Change directory\nmkdir Make a directory\ntouch Create a file\n\n\n1) Create a new local git repository\nOpen a terminal. Navigate to a folder you can put your repo in. Create a new repository called foo. Create README.md, leave it empty. Commit your changes.\n2) Create a branch\nCreate a new branch called bugFix. Switch to that branch. Check that you‚Äôre on the right branch.\n3) Make some changes in one branch\nOpen README.md in a text editor. Add a line of text. Whatever you want. The world is your oyster. Close the text editor. Commit your changes.\n4) Make conflicting changes\nSwitch back to the main branch.\n\n\n\n\n\n\nNote\n\n\n\nRun cat REAMDE.md. Do you see your changes from step 3? If you‚Äôve done everything correctly up to this point, the file should be empty. The changes you made in step 3 should be isolated in the bugFix branch.\n\n\nOpen README.md in a text editor again. Add a different line of text. Close the text editor and commit your changes.\n5) Merge your branches\nMerging works by bringing changes into the current branch. Since you‚Äôre currently in the main branch, you can bring the bugFix changes into main by running git merge bugFix. You should see a message like this:\nAuto-merging README.md\nCONFLICT (content): Merge conflict in README.md\nAutomatic merge failed; fix conflicts and then commit the result.\n6) Resolve your merge conflict\nInspect the contents of README.md at the command line. You should see the merge conflict notation:\n &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\n [The changes you made in main]\n =======\n [The changes you made in bugFix]\n &gt;&gt;&gt;&gt;&gt;&gt;&gt; bugFix\nRun git status. Git will tell you you‚Äôre currently in the middle of a merge.\nOn branch main\nYou have unmerged paths.\n  (fix conflicts and run \"git commit\")\n  (use \"git merge --abort\" to abort the merge)\n\nUnmerged paths:\n  (use \"git add &lt;file&gt;...\" to mark resolution)\n    both modified:   README.md\nOpen README.md in a text editor. Resolve the merge conflict by choosing the changes from either main or bugFix. Close the text editor, then commit your changes. Verify the merge is complete by checking the status of your repo.\n7) Draw!\nDraw the commit history of your repo. Find a partner and compare your drawings. Make edits as necessary. Confirm your drawing‚Äôs accuracy with an instructor.\n\n\nResolve yesterday‚Äôs merge conflict\nYou now have 99% of what you need to resolve yesterday‚Äôs merge conflict. There‚Äôs only one difference. Today, you learned how to merge two branches in the same repo. Yesterday, you created a conflict by making conflicting commits in the same branch on different local repos.\n\n\n\n\n\n\nNote\n\n\n\nWoah, that was confusing. What exactly was the difference there?\nToday‚Äôs merge conflict was between branches main and bugFix, which were both in your local repo.\nYesterday, your conflicting changes were both in the main branch, because you made edits in two different copies of the repo (Workbench and laptop).\n\n\nIn order to resolve the conflict, you first have to pull the remote version (which should have the changes you made on Workbench) down to your laptop.\nOpen your EDS 214 project in RStudio locally (not on Workbench). At the Terminal, run git pull. You should get the following error message.\nhint: You have divergent branches and need to specify how to reconcile them.\nhint: You can do so by running one of the following commands sometime before\nhint: your next pull:\nhint:\nhint:   git config pull.rebase false  # merge\nhint:   git config pull.rebase true   # rebase\nhint:   git config pull.ff only       # fast-forward only\nhint:\nhint: You can replace \"git config\" with \"git config --global\" to set a default\nhint: preference for all repositories. You can also pass --rebase, --no-rebase,\nhint: or --ff-only on the command line to override the configured default per\nhint: invocation.\nfatal: Need to specify how to reconcile divergent branches.\nThis is a really common error message that needs to be addressed once per repository. It‚Äôs telling you the same branch has conflicting edits (‚Äúdivergent branches‚Äù) and git doesn‚Äôt know how you want it to handle the divergence. There are three options: merge, rebase, and fast-forward. We‚Äôre only teaching you the merge option in this class. Tell git to use that option by running git config pull.rebase false. This means ‚Äúwhen I tell you to pull, if there‚Äôs a divergence, start a merge‚Äù.\nNow try pulling again. You should see the familiar merge conflict message. Call git status and verify the issue is in the spaghetti code you wrote on Monday.\nOpen your spaghetti code. Find the conflict by searching for ‚Äú&lt;&lt;&lt;&lt;&lt;‚Äù. Resolve the conflict using the skills you learned today. Commit and push. Call an instructor over to verify your repo is still in good shape.\nCongrats! You resolved the merge conflict!"
  },
  {
    "objectID": "course-materials/interactive/interactive-day3am.html#recap",
    "href": "course-materials/interactive/interactive-day3am.html#recap",
    "title": "Git Branching",
    "section": "Recap",
    "text": "Recap\nBranching and merging let you and your collaborators work in parallel on the same code base. Although they carry a learning curve, they help avoid common problems like accidentally overwriting each others‚Äô changes. And yes, merge conflicts do look scary. Words like ‚Äúerror‚Äù and ‚Äúfatal‚Äù tend to show up a lot. But they‚Äôre actually doing you a huge favor by drawing your attention directly to the line(s) of code where you and your collaborator collided. Now that you have the skills to resolve these conflicts, you are much better equipped to collaborate on your capstone project!"
  },
  {
    "objectID": "course-materials/interactive/interactive-day3am.html#footnotes",
    "href": "course-materials/interactive/interactive-day3am.html#footnotes",
    "title": "Git Branching",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nDon‚Äôt worry, you‚Äôll be ok.‚Ü©Ô∏é"
  },
  {
    "objectID": "course-materials/interactive/interactive-day4am.html",
    "href": "course-materials/interactive/interactive-day4am.html",
    "title": "Draft Quarto Analysis",
    "section": "",
    "text": "You started this week by looking at an analysis you needed to replicate. Since then, you wrote some spaghetti code and started refactoring your analysis. You took steps towards a collaborative, reproducible analysis by:\n\nOrganizing your folders and files\nTracking tasks using GitHub Issues\nIsolating changes in branches\n\nBut most of your analysis is still in a spaghetti state‚Ä¶"
  },
  {
    "objectID": "course-materials/interactive/interactive-day4am.html#background",
    "href": "course-materials/interactive/interactive-day4am.html#background",
    "title": "Draft Quarto Analysis",
    "section": "",
    "text": "You started this week by looking at an analysis you needed to replicate. Since then, you wrote some spaghetti code and started refactoring your analysis. You took steps towards a collaborative, reproducible analysis by:\n\nOrganizing your folders and files\nTracking tasks using GitHub Issues\nIsolating changes in branches\n\nBut most of your analysis is still in a spaghetti state‚Ä¶"
  },
  {
    "objectID": "course-materials/interactive/interactive-day4am.html#goals",
    "href": "course-materials/interactive/interactive-day4am.html#goals",
    "title": "Draft Quarto Analysis",
    "section": "Goals",
    "text": "Goals\nIn this session, you‚Äôre going to convert your spaghetti code into a reproducible Quarto document. Then you‚Äôll use GitHub Pages to share your results."
  },
  {
    "objectID": "course-materials/interactive/interactive-day4am.html#instructions",
    "href": "course-materials/interactive/interactive-day4am.html#instructions",
    "title": "Draft Quarto Analysis",
    "section": "Instructions",
    "text": "Instructions\n\nConvert to Quarto\nThe FlukeAndFeather Workflow Organization System‚Ñ¢ puts the manuscript Quarto document in the paper/ folder and renders it to the docs/ folder. Why docs/? Because GitHub Pages looks for web pages in the docs/ folder. You‚Äôll see exactly how in the next section..\nMake sure you‚Äôre on the main branch before proceeding.\n\nCreate a Quarto document in paper/ called ‚Äúpaper.qmd‚Äù.\nAdd markdown headers for Background, Data, Methods, and Results.\nMigrate your spaghetti code to code chunks under the appropriate headers.\nAdd markdown text as appropriate to explain your replication.\n\nDon‚Äôt render just yet. First we need to set up GitHub Pages.\n\n\nSet up GitHub Pages\n\nLet‚Äôs tell your Quarto document you want the outputs in your docs/ folder. In your paper/ folder, create a file called ‚Äú_quarto.yml‚Äù1. Add the following lines:\n\nproject:\n  output-dir: ../docs\n\nRender paper.qmd. Verify it created paper.html in docs/.\nNavigate to your repo on GitHub. Go to Settings &gt; Code and automation &gt; Pages.\nChange your Branch settings to match the image below. Choose the main branch, /docs directory, and hit Save.\n\n\n\nGo back to RStudio. Commit and push your changes.\nPop back to your GitHub repo. Switch from Settings to Actions. You should see workflow run(s) deploying your Pages site, similar to the screenshot below.\n\n\n\nWhen the workflow(s) are all green, navigate your browser to [your username].github.io/[reponame]/paper.html. You should see your analysis rendered in all its glory."
  },
  {
    "objectID": "course-materials/interactive/interactive-day4am.html#footnotes",
    "href": "course-materials/interactive/interactive-day4am.html#footnotes",
    "title": "Draft Quarto Analysis",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nTry doing it at the command line!‚Ü©Ô∏é"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#title-slide",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#title-slide",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "The Command Line and Remote Servers\nEDS 214: Analytical Workflows and Scientific Reproducibility\n\nDay 2 Morning | August 26th, 2025"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#learning-objectives",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#learning-objectives",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "This morning, you‚Äôll learn:\n\n\nWhy the command line is useful\nHow to issue commands on the command line\nWhy remote servers offer performance benefits\nHow to use the command line to interact with a remote server"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#why-not-gui",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#why-not-gui",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Why not a GUI?\n\n\n\nGraphical User Interface (GUI)\n\nPoint-and-click - gentler learning curve\nLimited customization options\nNearly impossible to automate\n\n\nCommand Line Interface (CLI)\n\nHighly customizable\nDesigned to be automated\nText-based - steeper learning curve\n\n\n\n\nAre the trade-offs worth it? For some scientists, maybe not. But for a data scientist, DEFINITELY."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#terminals-shells",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#terminals-shells",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Terminals and shells\n\n\n\nTerminal\n\nThe program you type commands into\nYour megaphone for shouting at the computer\n\n\nShell\n\nA program that passes commands to the operating system\nListens to your megaphone\n\n\n\n\nYou will often see Terminal and Shell used interchangeably. This can get confusing. It helps to see them in action. Let‚Äôs try it out!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#terminal-demo",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#terminal-demo",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Terminal and shell demo\n\n\nOpen a terminal\n\nMacOS: Terminal\nWindows: GitBash (both a terminal AND a shell)\n\nAsk the shell where you are\n\npwd - print working directory\nls - list files in the current directory\n\nCustomize the command with options\n\nls -l - long listing format\nls -a - show hidden files\nls -la - both!"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#onions-layers",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#onions-layers",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Onions have layers"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#key-shell-commands",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#key-shell-commands",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Key shell commands\n\n\n\nNavigation & File System\n\npwd - know where you are\nls (with -l, -a flags) - see what‚Äôs there\ncd - move around (including cd ~, cd ..)\nmkdir - create directories\nrmdir - remove directories (only if empty)\n\n\nFile Operations\n\ntouch - create files\ncp - copy files/directories\nmv - move/rename files\nrm - delete files (no recycle bin!)\ncat - view file contents"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#customizing-commands",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#customizing-commands",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Customizing commands\n\ncommand [options] [arguments]\n\ncommand - the command you want to run (e.g., ls)\noptions - flags that modify the command‚Äôs behavior (e.g., -l, -a)\narguments - the files or directories the command should operate on (e.g., mydir/)"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#cli-challenge-1",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#cli-challenge-1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "CLI challenge part 1\n\nDo the following in your terminal. Make a note of your answers in a text file.\n\n\nCreate the following directory structure on your computer using the command line only.\nrenewable-energy\n‚îú‚îÄ‚îÄ capacity\n‚îÇ   ‚îú‚îÄ‚îÄ san-luis-obispo.csv\n‚îÇ   ‚îú‚îÄ‚îÄ santa-barbara.csv\n‚îÇ   ‚îî‚îÄ‚îÄ ventura.csv\n‚îî‚îÄ‚îÄ usage\n    ‚îú‚îÄ‚îÄ san-luis-obispo.csv\n    ‚îú‚îÄ‚îÄ santa-barbara.csv\n    ‚îî‚îÄ‚îÄ ventura.csv\n\nNow, delete the capacity/ folder and rename usage/ to data/.\nUse ls -l data to check the contents of your directory. Answer the following questions.\n\nDoes your directory look as expected?\nWhat commands did you use?\nIn ls -l data, what parts correspond to the argument, option, and command?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#cli-challenge-2",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#cli-challenge-2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "CLI challenge part 2\n\n\n\nFrom the renewable-energy directory, run the following commands:\ncd data\nmkdir ../scripts\ntouch ../scripts/1_import.R\ncd ..\nmv scripts/1_import.R R/import.R\n\nAnswer the following questions.\n\nWhat error message did you get?\nWhat do you think these commands were supposed to accomplish?\nHow could you fix it?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#cli-review",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#cli-review",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "CLI review\n\nWhy is the command line useful?\n\nCustomizable\nAutomatable\n\nWhat‚Äôs the difference between the terminal and the shell?\nTerminal The program you type commands into\nShell The program that runs the commands\nWhat does a CLI command look like?\ncommand [options] [arguments]\npwd\nmv foo.R bar.R\nls -la data/"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day2am-slides.html#up-next",
    "href": "course-materials/lecture-slides/lecture-day2am-slides.html#up-next",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Up next\n\nUse the CLI to interact with a remote server."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#title-slide",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#title-slide",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Version Control with Git\nEDS 214: Analytical Workflows and Scientific Reproducibility\n\nDay 3 Morning | August 27th, 2025"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#learning-objectives",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#learning-objectives",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "This morning, you‚Äôll learn how to‚Ä¶\n\n\n\nUse branches for collaborative work\nMerge branches and resolve conflicts\nInterpret git commit histories"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#recap",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#recap",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Recap\n\nYou‚Äôve been using git for version control for three weeks. During that time you learned how to:\n\nCreate a repository\nCommit files to a local repository\nPush files to a remote repository\n\nThese are essential commands for using git solo. But what if you want to work with others?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#clone-commit-push1",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#clone-commit-push1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Clone, commit, push\n\nThese are the three essential commands for using git and GitHub solo.\nLet‚Äôs review these commands by visualizing a commit history."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#clone-commit-push2",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#clone-commit-push2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Clone, commit, push\n\nThese are the three essential commands for using git and GitHub solo.\nLet‚Äôs review these commands by visualizing a commit history."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#clone-commit-push3",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#clone-commit-push3",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Clone, commit, push\n\nQuestion Why do the arrows in the commit history diagram point backwards in time?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges1",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Branches, merges\n\nAs our work becomes more complex, creating branches becomes essential."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges2",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Branches, merges\n\nAs our work becomes more complex, creating branches becomes essential."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges3",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges3",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Branches, merges\n\nAs our work becomes more complex, creating branches becomes essential."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges4",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges4",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Branches, merges\n\nAs our work becomes more complex, creating branches becomes essential."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges5",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges5",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Branches, merges\n\nAs our work becomes more complex, creating branches becomes essential."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#why-branch",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#why-branch",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Why branch?\n\nBranching and merging have a learning curve and require additional overhead.\nBegging the question‚Ä¶\nWhy do we create branches?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#conflicts",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#conflicts",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Conflicts\n\nThis commit history permits a merge conflict. Why?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#resolving-conflicts-1",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#resolving-conflicts-1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Resolving conflicts pt 1\n\nMerge conflicts are best resolved manually. Your judgement is essential!\nThey look like this:\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\ntwo &lt;- 1 + 1  # This is the current branch's code\n=======\nfoo &lt;- 1 + 1  # This is the incoming branch's code\n&gt;&gt;&gt;&gt;&gt;&gt;&gt; d670460b5b4ae3ea915caf5c68d12f560a9fe3e4\nNotice that two of those lines look like R code, the other three look weird."
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#resolving-conflicts-2",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#resolving-conflicts-2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Resolving conflicts pt 2\n\nResolve the conflict by removing the weird lines and choosing the appropriate R code.\nGit views both of these solutions as valid. Which one would you choose? Why?\n\n\ntwo &lt;- 1 + 1\n\nfoo &lt;- 1 + 1"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#resolving-conflicts-3",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#resolving-conflicts-3",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Resolving conflicts pt 3\n\nYou‚Äôre almost done resolving the conflict.\nAfter choosing which code to keep, you have to let git know you‚Äôre done.\ngit commit -m \"Resolved merge conflict\"\nIn RStudio, would you run this command at the Console or the Terminal? How do you know?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges-recap",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#branches-merges-recap",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Branches and merges recap\n\nBranches are essential for collaborative work.\n\nWork on changes in parallel\nKeep the main branch stable while experimenting\n\nMerges reunite disparate branches, but they can create conflicts\n\nConflicts look scary, but you can resolve them!\nManually choose the code you want to keep using your judgement"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#review-pt-1",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#review-pt-1",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Review pt 1\n\nThis commit history reflects many different git operations. Label the following operations in the diagram below.\nclone, commit, push, pull, branch, merge"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#review-pt-2",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#review-pt-2",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Review pt 2\n\nWhich commit history below could yield a merge conflict? Why?"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-day3am-slides.html#live-demo",
    "href": "course-materials/lecture-slides/lecture-day3am-slides.html#live-demo",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Live demo\n\nLet‚Äôs switch over to RStudio and do a live demo with\n\nBranching\nMerging\nMerge conflict resolution"
  },
  {
    "objectID": "resources.html",
    "href": "resources.html",
    "title": "Recommended reading & materials",
    "section": "",
    "text": "Consider adding helpful resources (e.g.¬†online text books, blogs, people in the field to follow, videos, etc.) here. See EDS 240‚Äôs resources page as an example."
  },
  {
    "objectID": "course-materials/keys/key1.1.html",
    "href": "course-materials/keys/key1.1.html",
    "title": "Lab 1.1 KEY",
    "section": "",
    "text": "# load packages ----\nlibrary(tidyverse)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "course-materials/keys/key1.1.html#setup",
    "href": "course-materials/keys/key1.1.html#setup",
    "title": "Lab 1.1 KEY",
    "section": "",
    "text": "# load packages ----\nlibrary(tidyverse)\nlibrary(palmerpenguins)"
  },
  {
    "objectID": "course-materials/keys/key1.1.html#tidy-data-review",
    "href": "course-materials/keys/key1.1.html#tidy-data-review",
    "title": "Lab 1.1 KEY",
    "section": "Tidy Data Review",
    "text": "Tidy Data Review\nExample untidy / wide data:\n\n# create some untidy temperature data ----\ntemp_data_wide &lt;- tribble(\n  ~date, ~station1, ~station2,  ~station3,\n  \"2023-10-01\", 30.1, 29.8,  31.2,\n  \"2023-11-01\", 28.6, 29.1,  33.4,\n  \"2023-12-01\", 29.9, 28.5,  32.3\n)\n\n# print it out ----\nprint(temp_data_wide)\n\n# A tibble: 3 √ó 4\n  date       station1 station2 station3\n  &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 2023-10-01     30.1     29.8     31.2\n2 2023-11-01     28.6     29.1     33.4\n3 2023-12-01     29.9     28.5     32.3\n\n\nUsing pivot_longer() to ‚Äúlengthen‚Äù / tidy our data:\n\n# convert data from wide &gt; long ----\ntemp_data_long &lt;- temp_data_wide |&gt; \n  pivot_longer(cols = starts_with(\"station\"),\n               names_to = \"station_id\",\n               values_to = \"temp_c\")\n\n# print it out ----\nprint(temp_data_long)\n\n# A tibble: 9 √ó 3\n  date       station_id temp_c\n  &lt;chr&gt;      &lt;chr&gt;       &lt;dbl&gt;\n1 2023-10-01 station1     30.1\n2 2023-10-01 station2     29.8\n3 2023-10-01 station3     31.2\n4 2023-11-01 station1     28.6\n5 2023-11-01 station2     29.1\n6 2023-11-01 station3     33.4\n7 2023-12-01 station1     29.9\n8 2023-12-01 station2     28.5\n9 2023-12-01 station3     32.3"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-slides-template.html#title-slide",
    "href": "course-materials/lecture-slides/lecture-slides-template.html#title-slide",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "EDS 123: Lecture 1\nToday‚Äôs topic here\n\nWeek 1 | January 6th, 2025"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-slides-template.html#welcome",
    "href": "course-materials/lecture-slides/lecture-slides-template.html#welcome",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Welcome to EDS 123!\n\n\nThis is the default text size\n\n\n\n\nI can apply a class selector from meds-slides-styles.scss to change the size of this text\n\n\n\nSimilarly, I can apply a class selector(s) to modify the appearance of a subset of text\n\nCheck out this demo presentation for examples of all the cool capabilities of Revealjs"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-slides-template.html#block-level-styling",
    "href": "course-materials/lecture-slides/lecture-slides-template.html#block-level-styling",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "You can also apply styles to blocks of content\n\nWe can use divs to apply styling to all content within the div gates (:::):\n::: {.selector1 .selector2}\nSome content\n:::\n\nFor example:\n\nThis text is bolded\nThis text is italicized"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-slides-template.html#embedded-code",
    "href": "course-materials/lecture-slides/lecture-slides-template.html#embedded-code",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Here is some embedded & rendered code\n\n\nlibrary(palmerpenguins)\nlibrary(ggplot2)\n\nggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point()"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-slides-template.html#rendered-code",
    "href": "course-materials/lecture-slides/lecture-slides-template.html#rendered-code",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "Alternatively, we can render just the output"
  },
  {
    "objectID": "course-materials/lecture-slides/lecture-slides-template.html#columns",
    "href": "course-materials/lecture-slides/lecture-slides-template.html#columns",
    "title": "EDS 214: Analytical Workflows and Scientific Reproducibility",
    "section": "",
    "text": "You can arrange content in columns\n\n\n\nLearn more about the MEDS program on the Bren website."
  }
]